#pragma once

namespace tool::pool {

	enum eModes : int32_t {
		MODE_ZOMBIES = 0x0,
		MODE_MULTIPLAYER = 0x1,
		MODE_CAMPAIGN = 0x2,
		MODE_WARZONE = 0x3,
		MODE_COUNT = 0x4,
		MODE_INVALID = 0x4,
		MODE_FIRST = 0x0,
	};
	typedef float vec2_t[2];
	enum weapInventoryType_t : uint32_t
	{
		WEAPINVENTORY_PRIMARY = 0x0,
		WEAPINVENTORY_OFFHAND = 0x1,
		WEAPINVENTORY_ITEM = 0x2,
		WEAPINVENTORY_ALTMODE = 0x3,
		WEAPINVENTORY_MELEE = 0x4,
		WEAPINVENTORY_DWLEFTHAND = 0x5,
		WEAPINVENTORY_ABILITY = 0x6,
		WEAPINVENTORY_HEAVY = 0x7,
		WEAPINVENTORYCOUNT = 0x8,
	};
	enum gadgetType_e : uint32_t
	{
		GADGET_TYPE_NONE = 0x0,
		GADGET_TYPE_OTHER = 0x1,
		GADGET_TYPE_OPTIC_CAMO = 0x2,
		GADGET_TYPE_ARMOR_REGEN = 0x3,
		GADGET_TYPE_ARMOR = 0x4,
		GADGET_TYPE_DRONE = 0x5,
		GADGET_TYPE_VISION_PULSE = 0x6,
		GADGET_TYPE_MULTI_ROCKET = 0x7,
		GADGET_TYPE_TURRET_DEPLOY = 0x8,
		GADGET_TYPE_GRENADE = 0x9,
		GADGET_TYPE_JUKE = 0xA,
		GADGET_TYPE_HACKER = 0xB,
		GADGET_TYPE_INFRARED = 0xC,
		GADGET_TYPE_SPEED_BURST = 0xD,
		GADGET_TYPE_HERO_WEAPON = 0xE,
		GADGET_TYPE_COMBAT_EFFICIENCY = 0xF,
		GADGET_TYPE_FLASHBACK = 0x10,
		GADGET_TYPE_CLEANSE = 0x11,
		GADGET_TYPE_SYSTEM_OVERLOAD = 0x12,
		GADGET_TYPE_SERVO_SHORTOUT = 0x13,
		GADGET_TYPE_EXO_BREAKDOWN = 0x14,
		GADGET_TYPE_SURGE = 0x15,
		GADGET_TYPE_RAVAGE_CORE = 0x16,
		GADGET_TYPE_REMOTE_HIJACK = 0x17,
		GADGET_TYPE_IFF_OVERRIDE = 0x18,
		GADGET_TYPE_CACOPHONY = 0x19,
		GADGET_TYPE_FORCED_MALFUNCTION = 0x1A,
		GADGET_TYPE_CONCUSSIVE_WAVE = 0x1B,
		GADGET_TYPE_OVERDRIVE = 0x1C,
		GADGET_TYPE_UNSTOPPABLE_FORCE = 0x1D,
		GADGET_TYPE_RAPID_STRIKE = 0x1E,
		GADGET_TYPE_ACTIVE_CAMO = 0x1F,
		GADGET_TYPE_SENSORY_OVERLOAD = 0x20,
		GADGET_TYPE_ES_STRIKE = 0x21,
		GADGET_TYPE_IMMOLATION = 0x22,
		GADGET_TYPE_FIREFLY_SWARM = 0x23,
		GADGET_TYPE_SMOKESCREEN = 0x24,
		GADGET_TYPE_MISDIRECTION = 0x25,
		GADGET_TYPE_MRPUKEY = 0x26,
		GADGET_TYPE_SHOCK_FIELD = 0x27,
		GADGET_TYPE_RESURRECT = 0x28,
		GADGET_TYPE_HEAT_WAVE = 0x29,
		GADGET_TYPE_CLONE = 0x2A,
		GADGET_TYPE_ROULETTE = 0x2B,
		GADGET_TYPE_THIEF = 0x2C,
		GADGET_TYPE_DISRUPTOR = 0x2D,
		GADGET_TYPE_HORNET_SWARM = 0x2E,
		GADGET_TYPE_GROUP_REVIVE = 0x2F,
		GADGET_TYPE_XRAY_EYES = 0x30,
		GADGET_TYPE_EMERGENCY_MELEE = 0x31,
		GADGET_TYPE_SHOULDER_GUN = 0x32,
		GADGET_TYPE_GRAPPLE = 0x33,
		GADGET_TYPE_INVULNERABLE = 0x34,
		GADGET_TYPE_SPRINT_BOOST = 0x35,
		GADGET_TYPE_HEALTH_REGEN = 0x36,
		GADGET_TYPE_SELF_DESTRUCT = 0x37,
		GADGET_TYPE_BARRIER_BUILDER = 0x38,
		GADGET_TYPE_SPAWN_BEACON = 0x39,
		GADGET_TYPE_COUNT = 0x3A,
	};
	enum guidedMissileType_t : uint32_t
	{
		MISSILE_GUIDANCE_NONE = 0x0,
		MISSILE_GUIDANCE_SIDEWINDER = 0x1,
		MISSILE_GUIDANCE_HELLFIRE = 0x2,
		MISSILE_GUIDANCE_JAVELIN = 0x3,
		MISSILE_GUIDANCE_BALLISTIC = 0x4,
		MISSILE_GUIDANCE_WIREGUIDED = 0x5,
		MISSILE_GUIDANCE_TVGUIDED = 0x6,
		MISSILE_GUIDANCE_DRONE = 0x7,
		MISSILE_GUIDANCE_HEATSEEKING = 0x8,
		MISSILE_GUIDANCE_ROBOTECH = 0x9,
		MISSILE_GUIDANCE_DYNAMICIMPACTPOINT = 0xA,
		MISSILE_GUIDANCE_COUNT = 0xB,
	};

	enum weapType_t : uint32_t
	{
		WEAPTYPE_BULLET = 0x0,
		WEAPTYPE_GRENADE = 0x1,
		WEAPTYPE_PROJECTILE = 0x2,
		WEAPTYPE_BINOCULARS = 0x3,
		WEAPTYPE_GAS = 0x4,
		WEAPTYPE_BOMB = 0x5,
		WEAPTYPE_MINE = 0x6,
		WEAPTYPE_MELEE = 0x7,
		WEAPTYPE_RIOTSHIELD = 0x8,
		WEAPTYPE_SCRIPT = 0x9,
		WEAPTYPE_NUM = 0xa,
	};

	enum lockOnType_t : uint32_t
	{
		LOCK_ON_TYPE_NONE = 0x0,
		LOCK_ON_TYPE_LEGACY_SINGLE = 0x1,
		LOCK_ON_TYPE_AP_SINGLE = 0x2,
		LOCK_ON_TYPE_AP_MULTI = 0x3,
		LOCK_ON_TYPE_COUNT = 0x4,
	};

	enum weapClass_t : uint32_t {
		WEAPCLASS_RIFLE = 0x0,
		WEAPCLASS_MG = 0x1,
		WEAPCLASS_SMG = 0x2,
		WEAPCLASS_SPREAD = 0x3,
		WEAPCLASS_PISTOL = 0x4,
		WEAPCLASS_GRENADE = 0x5,
		WEAPCLASS_ROCKETLAUNCHER = 0x6,
		WEAPCLASS_TURRET = 0x7,
		WEAPCLASS_NON_PLAYER = 0x8,
		WEAPCLASS_GAS = 0x9,
		WEAPCLASS_ITEM = 0xA,
		WEAPCLASS_MELEE = 0xB,
		WEAPCLASS_KILLSTREAK_ALT_STORED_WEAPON = 0xC,
		WEAPCLASS_PISTOL_SPREAD = 0xD,
		WEAPCLASS_BALL = 0xE,
		WEAPCLASS_NUM = 0xF,
	};
	enum projExplosionType_t : uint32_t {
		PROJEXP_NONE = 0,
		PROJEXP_GRENADE = 1,
		PROJEXP_ROCKET = 2,
		PROJEXP_FLASHBANG = 3,
		PROJEXP_DUD = 4,
		PROJEXP_SMOKE = 5,
		PROJEXP_HEAVY_EXPLOSIVE = 6,
		PROJEXP_FIRE = 7,
		PROJEXP_NAPALM_BLOB = 8,
		PROJEXP_BOLD = 9,
		PROJEXP_SHRAPNEL_SPAN = 0xa,
		PROJEXP_NUM = 0xb,
	};

	enum OffhandClass : uint32_t
	{
		OFFHAND_CLASS_NONE = 0x0,
		OFFHAND_CLASS_FRAG_GRENADE = 0x1,
		OFFHAND_CLASS_SMOKE_GRENADE = 0x2,
		OFFHAND_CLASS_FLASH_GRENADE = 0x3,
		OFFHAND_CLASS_GEAR = 0x4,
		OFFHAND_CLASS_SUPPLYDROP_MARKER = 0x5,
		OFFHAND_CLASS_GADGET = 0x6,
		OFFHAND_CLASS_COUNT = 0x7,
	};
	enum OffhandSlot : uint32_t
	{
		OFFHAND_SLOT_NONE = 0x0,
		OFFHAND_SLOT_LETHAL_GRENADE = 0x1,
		OFFHAND_SLOT_TACTICAL_GRENADE = 0x2,
		OFFHAND_SLOT_EQUIPMENT = 0x3,
		OFFHAND_SLOT_SPECIFIC_USE = 0x4,
		OFFHAND_SLOT_GADGET = 0x5,
		OFFHAND_SLOT_SPECIAL = 0x6,
		OFFHAND_SLOT_HERO_WEAPON = 0x7,
		OFFHAND_SLOT_TAUNT = 0x8,
		OFFHAND_SLOT_SCRIPTED = 0x9,
		OFFHAND_SLOT_COUNT = 0xa,
	};
	enum ImpactType : uint32_t {
		IMPACT_TYPE_NONE = 0x0,
		IMPACT_TYPE_BULLET_SMALL = 0x1,
		IMPACT_TYPE_BULLET_LARGE = 0x2,
		IMPACT_TYPE_BULLET_AP = 0x3,
		IMPACT_TYPE_BULLET_XTREME = 0x4,
		IMPACT_TYPE_SHOTGUN = 0x5,
		IMPACT_TYPE_GRENADE_BOUNCE = 0x6,
		IMPACT_TYPE_GRENADE_EXPLODE = 0x7,
		IMPACT_TYPE_RIFLE_GRENADE = 0x8,
		IMPACT_TYPE_ROCKET_EXPLODE = 0x9,
		IMPACT_TYPE_ROCKET_EXPLODE_XTREME = 0xA,
		IMPACT_TYPE_PROJECTILE_DUD = 0xB,
		IMPACT_TYPE_MORTAR_SHELL = 0xC,
		IMPACT_TYPE_TANK_SHELL = 0xD,
		IMPACT_TYPE_BOLT = 0xE,
		IMPACT_TYPE_BLADE = 0xF,
		IMPACT_TYPE_COUNT = 0x10,
	};


	const char* WeapInventoryTypeName(weapInventoryType_t t);
	const char* WeapTypeName(weapType_t t);
	const char* GadgetTypeName(gadgetType_e t);
	const char* GuidedMissileTypeName(guidedMissileType_t t);
	const char* OffhandClassName(OffhandClass t);
	const char* OffhandSlotName(OffhandSlot t);
	const char* LockOnTypeName(lockOnType_t t);
	const char* WeapClassName(weapClass_t t);
	const char* ProjExplosionTypeName(projExplosionType_t t);
	const char* ImpactTypeName(ImpactType t);


}