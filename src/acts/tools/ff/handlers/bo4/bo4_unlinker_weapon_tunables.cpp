#include <includes.hpp>
#include <tools/ff/handlers/handler_game_bo4.hpp>
#include <tools/utils/raw_file_extractor.hpp>
#include <tools/pool_weapon.hpp>

namespace {
	using namespace tool::pool;
	using namespace fastfile::handlers::bo4;
	class ImplWorker : public Worker {
		void Unlink(fastfile::FastFileOption& opt, void* ptr) {
			struct WeaponTunables {
				uint64_t unk0;
				uint64_t unk8;
				uint64_t unk10;
				uint64_t unk18;
				const char* var_f56ac2bd;
				const char* spawninfluencer;
				XHash var_77b46a8c;
				XHash name;
				XHash unk50;
				XHash unk60;
				XHash unk70;
				uint64_t unk80;
				uint64_t unk88;
				uint64_t unk90;
				uint64_t unk98;
				uint64_t unka0;
				uint64_t unka8;
				uint64_t unkb0;
				uint64_t unkb8;
				uint64_t unkc0;
				uint64_t unkc8;
				uint64_t unkd0;
				uint64_t unkd8;
				uint64_t unke0;
				uint64_t unke8;
				uint64_t unkf0;
				uint64_t unkf8;
				uint64_t unk100;
				uint64_t unk108;
				uint64_t unk110;
				uint64_t unk118;
				uint64_t unk120;
				uint64_t unk128;
				uint64_t unk130;
				uint64_t unk138;
				uint64_t unk140;
				uint64_t unk148;
				uint64_t unk150;
				uint64_t unk158;
				uint64_t unk160;
				uint64_t unk168;
				uint64_t unk170;
				uint64_t unk178;
				uint64_t unk180;
				uint64_t unk188;
				uint64_t unk190;
				uint64_t unk198;
				uint64_t unk1a0;
				uint64_t unk1a8;
				uint64_t unk1b0;
				uint64_t unk1b8;
				uint64_t unk1c0;
				uint64_t unk1c8;
				uint64_t unk1d0;
				uint64_t unk1d8;
				uint64_t unk1e0;
				uint64_t unk1e8;
				uint64_t unk1f0;
				uint32_t unk1f8;
				ScrString_t unk1fc;
				ScrString_t unk200;
				ScrString_t unk204;
				ScrString_t hackertriggerorigintag;
				uint32_t unk20c;
				uint64_t unk210;
				uint64_t unk218;
				uint32_t unk220;
				uint32_t unk224;
				uint64_t unk228;
				int32_t explosioninnerdamage;
				uint32_t unk234;
				uint64_t unk238;
				uint64_t unk240;
				int32_t explosionouterdamage;
				uint32_t unk24c;
				uint64_t unk250;
				uint64_t unk258;
				uint64_t unk260;
				uint64_t unk268;
				uint64_t unk270;
				uint64_t unk278;
				uint64_t unk280;
				uint64_t unk288;
				uint64_t unk290;
				uint64_t unk298;
				uint64_t unk2a0;
				uint32_t unk2a8;
				float gadget_shockfield_radius;
				float gadget_shockfield_damage;
				int32_t gadget_flickerondamage;
				int32_t gadget_flickeronpowerloss;
				int32_t var_e4109b63;
				uint32_t unk2c0;
				int32_t gadget_max_hitpoints;
				uint64_t unk2c8;
				uint64_t unk2d0;
				uint64_t unk2d8;
				uint32_t unk2e0;
				int32_t var_c4d4d2a9;
				uint32_t unk2e8;
				float gadget_powerofflossondamage;
				uint64_t unk2f0;
				uint32_t unk2f8;
				int32_t gadget_powergainonretrieve;
				float gadget_powergainscorefactor;
				float var_c15c6b39;
				int32_t var_6a864cad;
				uint32_t unk30c;
				uint64_t unk310;
				int32_t gadget_powermoveloss;
				float gadget_powermovespeed;
				float gadget_poweronlossondamage;
				uint32_t unk324;
				byte var_58543a1c;
				byte unk329;
				uint16_t unk32a;
				int32_t var_68a0f062;
				float var_abb570e0;
				int32_t var_829de2ac;
				uint32_t unk338;
				float var_e4d4fa7e;
				float gadget_powerreplenishfactor;
				int32_t gadget_power_round_end_active_penalty;
				int32_t gadget_powersprintloss;
				int32_t var_d911d477;
				uint64_t unk350;
				uint64_t unk358;
				float gadget_power_usage_rate;
				float var_e1811962;
				float var_66103577;
				float var_f9eec1ec;
				int32_t var_6821283d;
				int32_t var_81683931;
				int32_t var_1e89f40;
				int32_t gadget_pulse_duration;
				uint32_t unk380;
				int32_t var_4d88a1ff;
				int32_t var_9d776ba6;
				int32_t var_b9951041;
				int32_t var_8e0b0827;
				float var_a2d7b97c;
				float var_5be370e9;
				int32_t var_42a3cafc;
				uint32_t unk3a0;
				int32_t gadget_pulse_max_range;
				uint64_t unk3a8;
				uint64_t unk3b0;
				int32_t var_44c79c09;
				uint32_t unk3bc;
				gadgetType_e gadget_type;
				uint32_t unk3c4;
				uint64_t unk3c8;
				uint64_t unk3d0;
				uint32_t unk3d8;
				uint16_t unk3dc;
				byte var_2cb95b88;
				byte unk3df;
				uint64_t unk3e0;
				byte gadget_turnoff_onempjammed;
				byte unk3e9;
				uint16_t unk3ea;
				uint32_t unk3ec;
				byte gadget_heroversion_2_0;
				byte var_256488f1;
				uint16_t unk3f2;
				byte unk3f4;
				byte gadget_powergainscoreignoreself;
				byte var_f23e9d19;
				byte gadget_powergainscoreignorewhenactive;
				uint16_t unk3f8;
				byte unk3fa;
				byte var_ddaa57f2;
				byte gadget_power_reset_on_class_change;
				byte unk3fd;
				byte gadget_power_reset_on_spawn;
				byte gadget_power_reset_on_team_change;
				byte gadget_power_reset_on_round_switch;
				byte gadget_power_consume_on_ammo_use;
				byte var_5801b768;
				byte unk403;
				byte var_bec5136b;
				byte unk405;
				byte unk406;
				byte var_28bb357c;
				byte unk408;
				byte var_f10d73e1;
				byte var_7b5016a7;
				byte unk40b;
				byte unk40c;
				byte var_ce34bb7e;
				uint16_t unk40e;
				guidedMissileType_t guidedMissileType;
				uint32_t unk414;
				uint64_t unk418;
				uint64_t unk420;
				uint64_t unk428;
				uint64_t unk430;
				uint64_t unk438;
				uint64_t unk440;
				uint64_t unk448;
				uint64_t unk450;
				uint64_t unk458;
				uint64_t unk460;
				uint64_t unk468;
				uint64_t unk470;
				uint64_t unk478;
				uint64_t unk480;
				uint64_t unk488;
				uint64_t unk490;
				uint64_t unk498;
				uint64_t unk4a0;
				uint64_t unk4a8;
				ImpactType impactType;
				OffhandClass offhandClass;
				OffhandSlot offhandSlot;
				uint32_t unk4bc;
				uint64_t unk4c0;
				uint64_t unk4c8;
				uint64_t unk4d0;
				uint64_t unk4d8;
				uint64_t unk4e0;
				uint64_t unk4e8;
				uint64_t unk4f0;
				uint64_t unk4f8;
				uint64_t unk500;
				uint64_t unk508;
				uint64_t unk510;
				uint64_t unk518;
				uint64_t unk520;
				uint64_t unk528;
				uint64_t unk530;
				uint64_t unk538;
				uint64_t unk540;
				uint64_t unk548;
				uint64_t unk550;
				uint64_t unk558;
				uint64_t unk560;
				uint32_t unk568;
				uint32_t unk56c;
				float var_27c94b15;
				float var_16e90b80;
				float var_6cb9946f;
				float var_40ffe7d2;
				weapClass_t weapClass;
				uint32_t unk584;
				uint32_t unk588;
				weapInventoryType_t inventoryType;
				uint32_t unk590;
				lockOnType_t lockontype;
				uint64_t unk598;
				uint32_t unk5a0;
				uint32_t unk5a4;
				uint32_t unk5a8;
				projExplosionType_t projExplosionType;
				uint64_t unk5b0;
				uint64_t unk5b8;
				weapType_t weapType;
				uint32_t unk5c4;
				uint64_t unk5c8;
				uint64_t unk5d0;
				uint64_t unk5d8;
				uint64_t unk5e0;
				uint64_t unk5e8;
				uint64_t unk5f0;
				uint64_t unk5f8;
				uint64_t unk600;
				uint64_t unk608;
				uint64_t unk610;
				float aimeleerange;
				uint32_t unk61c;
				uint64_t unk620;
				uint64_t unk628;
				uint64_t unk630;
				uint64_t unk638;
				uint64_t unk640;
				uint32_t unk648;
				float var_6844746b;
				float var_e2b40cd5;
				uint32_t unk654;
				uint64_t unk658;
				uint64_t unk660;
				uint64_t unk668;
				uint64_t unk670;
				uint64_t unk678;
				uint64_t unk680;
				uint64_t unk688;
				uint64_t unk690;
				float damagetoownerscalar;
				uint32_t unk69c;
				uint64_t unk6a0;
				uint64_t unk6a8;
				float var_c94f007c;
				float var_3a00e7eb;
				float var_2cf65b96;
				uint32_t unk6bc;
				uint64_t unk6c0;
				uint64_t unk6c8;
				uint64_t unk6d0;
				uint64_t unk6d8;
				uint64_t unk6e0;
				uint64_t unk6e8;
				uint64_t unk6f0;
				uint64_t unk6f8;
				uint64_t unk700;
				uint64_t unk708;
				uint64_t unk710;
				uint64_t unk718;
				uint64_t unk720;
				uint64_t unk728;
				uint32_t unk730;
				float adsspread;
				uint64_t unk738;
				uint64_t unk740;
				uint64_t unk748;
				uint64_t unk750;
				uint64_t unk758;
				uint64_t unk760;
				uint64_t unk768;
				uint64_t unk770;
				uint64_t unk778;
				uint64_t unk780;
				uint64_t unk788;
				uint64_t unk790;
				uint64_t unk798;
				uint64_t unk7a0;
				uint64_t unk7a8;
				uint64_t unk7b0;
				uint64_t unk7b8;
				uint64_t unk7c0;
				uint64_t unk7c8;
				uint64_t unk7d0;
				uint64_t unk7d8;
				uint64_t unk7e0;
				uint64_t unk7e8;
				uint64_t unk7f0;
				uint64_t unk7f8;
				uint64_t unk800;
				uint64_t unk808;
				uint64_t unk810;
				uint64_t unk818;
				uint64_t unk820;
				uint64_t unk828;
				uint64_t unk830;
				uint32_t unk838;
				float fightdist;
				uint64_t unk840;
				uint64_t unk848;
				uint32_t unk850;
				float var_1f13c7f1;
				uint64_t unk858;
				uint64_t unk860;
				int32_t var_5af80bb6;
				uint32_t unk86c;
				uint64_t unk870;
				uint64_t unk878;
				uint64_t unk880;
				uint64_t unk888;
				uint64_t unk890;
				uint64_t unk898;
				uint64_t unk8a0;
				uint64_t unk8a8;
				uint64_t unk8b0;
				uint64_t unk8b8;
				float var_36c76157;
				uint32_t unk8c4;
				uint64_t unk8c8;
				uint64_t unk8d0;
				uint64_t unk8d8;
				uint64_t unk8e0;
				uint64_t unk8e8;
				uint64_t unk8f0;
				uint32_t unk8f8;
				float var_19f920eb;
				uint64_t unk900;
				uint64_t unk908;
				uint64_t unk910;
				uint64_t unk918;
				uint64_t unk920;
				uint64_t unk928;
				uint64_t unk930;
				uint64_t unk938;
				uint64_t unk940;
				uint32_t unk948;
				float maxdist;
				float maxgibdistance;
				uint32_t unk954;
				uint64_t unk958;
				uint64_t unk960;
				uint64_t unk968;
				uint32_t unk970;
				float meleelungerange;
				uint64_t unk978;
				float var_9aa1ef19;
				uint32_t unk984;
				float var_cd539cb2;
				float var_cb3d0f65;
				float var_7872b3a;
				float var_367c47fc;
				float var_ccebc40;
				uint32_t unk99c;
				uint64_t unk9a0;
				uint64_t unk9a8;
				uint32_t unk9b0;
				float var_deb0b2fe;
				uint64_t unk9b8;
				uint64_t unk9c0;
				uint64_t unk9c8;
				uint64_t unk9d0;
				uint64_t unk9d8;
				uint64_t unk9e0;
				uint64_t unk9e8;
				uint64_t unk9f0;
				float lifetime;
				uint32_t unk9fc;
				uint64_t unka00;
				uint64_t unka08;
				uint64_t unka10;
				uint64_t unka18;
				uint64_t unka20;
				uint64_t unka28;
				uint64_t unka30;
				uint64_t unka38;
				uint64_t unka40;
				uint64_t unka48;
				uint64_t unka50;
				uint64_t unka58;
				uint64_t unka60;
				uint64_t unka68;
				uint64_t unka70;
				uint64_t unka78;
				uint32_t unka80;
				float sprintboostduration;
				float sprintboostradius;
				uint32_t unka8c;
				uint64_t unka90;
				uint64_t unka98;
				uint64_t unkaa0;
				uint64_t unkaa8;
				uint64_t unkab0;
				uint64_t unkab8;
				uint64_t unkac0;
				uint32_t unkac8;
				float lockonlossanglehorizontal;
				float lockonlossanglevertical;
				float lockonanglehorizontal;
				float lockonanglevertical;
				uint32_t unkadc;
				uint64_t unkae0;
				float vehicleprojectiledamagescalar;
				float vehicleprojectilesplashdamagescalar;
				uint64_t unkaf0;
				uint64_t unkaf8;
				uint64_t unkb00;
				uint64_t unkb08;
				uint32_t unkb10;
				float var_416021d8;
				uint64_t unkb18;
				uint64_t unkb20;
				uint64_t unkb28;
				uint64_t unkb30;
				uint64_t unkb38;
				uint64_t unkb40;
				uint64_t unkb48;
				uint64_t unkb50;
				uint64_t unkb58;
				uint32_t unkb60;
				int32_t aiFuseTime;
				uint64_t unkb68;
				uint64_t unkb70;
				uint64_t unkb78;
				uint32_t unkb80;
				int32_t burndamage;
				int32_t burndamageinterval;
				int32_t burnduration;
				int32_t burstcount;
				uint32_t unkb94;
				uint64_t unkb98;
				uint64_t unkba0;
				uint64_t unkba8;
				uint64_t unkbb0;
				uint64_t unkbb8;
				int32_t var_98333ae;
				int32_t var_1c0e3cb7;
				int32_t var_4941de5;
				uint32_t unkbcc;
				uint64_t unkbd0;
				uint64_t unkbd8;
				uint64_t unkbe0;
				uint64_t unkbe8;
				uint64_t unkbf0;
				uint64_t unkbf8;
				uint32_t unkc00;
				int32_t var_f7e67f28;
				int32_t var_227c90e1;
				int32_t var_ab300840;
				int32_t var_849af6b4;
				int32_t var_c4aae0fa;
				int32_t var_5ac2e7a4;
				int32_t var_76127e14;
				uint64_t unkc20;
				uint64_t unkc28;
				uint64_t unkc30;
				uint64_t unkc38;
				uint64_t unkc40;
				uint64_t unkc48;
				uint64_t unkc50;
				uint64_t unkc58;
				uint64_t unkc60;
				uint64_t unkc68;
				uint32_t unkc70;
				int32_t var_df381b5d;
				int32_t var_a8bd8bb2;
				int32_t var_8134b209;
				int32_t heal;
				int32_t var_4465ef1e;
				uint64_t unkc88;
				uint64_t unkc90;
				uint64_t unkc98;
				uint64_t unkca0;
				uint32_t unkca8;
				int32_t ammoindex;
				uint64_t unkcb0;
				uint64_t unkcb8;
				uint32_t iClipSize;
				int32_t var_ec2cbce2;
				int32_t var_df0f9ce9;
				uint32_t unkccc;
				uint64_t unkcd0;
				uint64_t unkcd8;
				uint64_t unkce0;
				uint64_t unkce8;
				uint64_t unkcf0;
				uint64_t unkcf8;
				uint64_t unkd00;
				uint64_t unkd08;
				uint64_t unkd10;
				uint64_t unkd18;
				uint32_t unkd20;
				int32_t var_1123a989;
				uint64_t unkd28;
				uint64_t unkd30;
				uint64_t unkd38;
				uint64_t unkd40;
				uint32_t unkd48;
				uint32_t iMaxAmmo;
				uint32_t meleedamage;
				uint32_t unkd54;
				uint64_t unkd58;
				uint32_t unkd60;
				uint32_t unkd64;
				uint32_t unkd68;
				uint32_t meleetime;
				uint64_t unkd70;
				uint64_t unkd78;
				uint64_t unkd80;
				uint64_t unkd88;
				uint64_t unkd90;
				uint64_t unkd98;
				uint64_t unkda0;
				uint64_t unkda8;
				uint64_t unkdb0;
				uint64_t unkdb8;
				uint64_t unkdc0;
				uint64_t unkdc8;
				uint64_t unkdd0;
				uint64_t unkdd8;
				uint64_t unkde0;
				uint64_t unkde8;
				uint64_t unkdf0;
				uint64_t unkdf8;
				uint64_t unke00;
				uint64_t unke08;
				uint64_t unke10;
				uint64_t unke18;
				uint64_t unke20;
				uint64_t unke28;
				uint64_t unke30;
				uint64_t unke38;
				uint32_t iStartAmmo;
				int32_t fuellife;
				uint64_t unke48;
				int32_t lockonlossradius;
				uint32_t unke54;
				uint64_t unke58;
				int32_t lockonminrange;
				int32_t lockonradius;
				uint32_t unke68;
				int32_t lockonscreenradius;
				uint64_t unke70;
				uint64_t unke78;
				uint64_t unke80;
				uint64_t unke88;
				int32_t maxheal;
				int32_t maxinstancesallowed;
				uint64_t unke98;
				uint64_t unkea0;
				uint64_t unkea8;
				uint64_t unkeb0;
				uint64_t unkeb8;
				uint64_t unkec0;
				uint64_t unkec8;
				uint32_t unked0;
				uint32_t meleechargetime;
				uint64_t unked8;
				uint64_t unkee0;
				uint64_t unkee8;
				uint64_t unkef0;
				uint64_t unkef8;
				uint64_t unkf00;
				uint64_t unkf08;
				uint64_t unkf10;
				uint32_t meleepowertime;
				uint32_t unkf1c;
				uint64_t unkf20;
				uint32_t meleepowertimeleft;
				uint32_t unkf2c;
				uint64_t unkf30;
				uint64_t unkf38;
				uint32_t unkf40;
				int32_t var_cddb5cd0;
				uint32_t unkf48;
				int32_t var_e5db3b95;
				int32_t var_61d29b2f;
				int32_t multidetonation;
				int32_t var_c264efc6;
				int32_t var_95d8fabf;
				uint64_t unkf60;
				uint64_t unkf68;
				uint64_t unkf70;
				uint64_t unkf78;
				uint64_t unkf80;
				uint64_t unkf88;
				int32_t playerdamage;
				uint32_t unkf94;
				uint64_t unkf98;
				uint64_t unkfa0;
				uint64_t unkfa8;
				uint64_t unkfb0;
				uint64_t unkfb8;
				int32_t var_ac36c1db;
				uint32_t unkfc4;
				uint64_t unkfc8;
				uint64_t unkfd0;
				uint64_t unkfd8;
				uint64_t unkfe0;
				uint64_t unkfe8;
				uint64_t unkff0;
				uint64_t unkff8;
				uint64_t unk1000;
				int32_t var_60563796;
				int32_t var_7a93ed37;
				uint64_t unk1010;
				uint64_t unk1018;
				uint64_t unk1020;
				uint64_t unk1028;
				uint64_t unk1030;
				uint64_t unk1038;
				uint64_t unk1040;
				uint64_t unk1048;
				uint64_t unk1050;
				uint64_t unk1058;
				uint64_t unk1060;
				uint64_t unk1068;
				uint64_t unk1070;
				uint64_t unk1078;
				uint64_t unk1080;
				uint64_t unk1088;
				uint64_t unk1090;
				uint64_t unk1098;
				uint64_t unk10a0;
				uint64_t unk10a8;
				uint64_t unk10b0;
				byte unk10b8;
				byte unk10b9;
				byte unk10ba;
				byte unk10bb;
				byte unk10bc;
				byte unk10bd;
				byte unk10be;
				byte ammoCountClipRelative;
				byte unk10c0;
				byte var_8032088a;
				byte ammoregen;
				byte unk10c3;
				uint32_t unk10c4;
				uint32_t unk10c8;
				uint16_t unk10cc;
				byte var_f6dea63a;
				byte unk10cf;
				byte unk10d0;
				byte altoffhand;
				uint16_t unk10d2;
				byte unk10d4;
				bool bAltWeaponDisableSwitching;
				byte unk10d6;
				byte unk10d7;
				byte unk10d8;
				byte anyplayercanretrieve;
				byte unk10da;
				byte isboltaction;
				uint16_t unk10dc;
				byte unk10de;
				byte bulletimpactexplode;
				uint16_t unk10e0;
				byte canuseunderwater;
				byte iscliponly;
				uint16_t unk10e4;
				byte var_337fc1cf;
				byte craftitem;
				byte var_9fffdcee;
				byte decoy;
				byte destroyablebytrophysystem;
				bool bDieOnRespawn;
				byte unk10ec;
				byte disabledeploy;
				uint16_t unk10ee;
				uint16_t unk10f0;
				byte unk10f2;
				byte disallowatmatchstart;
				uint16_t unk10f4;
				byte dodamagefeedback;
				byte doempdestroyfx;
				byte doesfiredamage;
				byte dohackedstats;
				byte dostun;
				byte unk10fb;
				byte unk10fc;
				bool isdualwield;
				byte unk10fe;
				byte unk10ff;
				uint16_t unk1100;
				byte unk1102;
				byte var_251796e3;
				uint16_t unk1104;
				byte unk1106;
				byte ignoresflakjacket;
				byte ignoreslightarmor;
				byte ignorespowerarmor;
				byte ignoreteamkills;
				byte unk110b;
				byte unk110c;
				byte isaikillstreakdamage;
				byte isballisticknife;
				byte iscarriedkillstreak;
				byte isemp;
				byte isflash;
				byte isflourishweapon;
				byte isgameplayweapon;
				byte ishacktoolweapon;
				byte bIsHybridWeapon;
				byte isperkbottle;
				byte isscavengable;
				byte issniperweapon;
				byte isstun;
				byte issupplydropweapon;
				byte unk111b;
				byte unk111c;
				byte var_130391b9;
				byte var_6f12adba;
				byte blocksprone;
				uint16_t unk1120;
				byte meleeignoreslightarmor;
				byte unk1123;
				uint32_t unk1124;
				uint32_t unk1128;
				byte unk112c;
				byte nohitmarker;
				byte unk112e;
				byte nonstowedweapon;
				uint32_t unk1130;
				byte notkillstreak;
				byte unk1135;
				uint16_t unk1136;
				uint64_t unk1138;
				uint32_t unk1140;
				byte setusedstat;
				byte unk1145;
				byte shownenemyequip;
				byte shownenemyexplo;
				byte shownretrievable;
				byte unk1149;
				byte skipbattlechatterkill;
				byte skipbattlechatterreload;
				byte skiplowammovox;
				byte specialpain;
				byte isthrowback;
				byte unk114f;
				uint64_t unk1150;
				uint64_t unk1158;
				uint32_t unk1160;
				byte unk1164;
				byte var_9111ccc0;
				uint16_t unk1166;
				uint32_t unk1168;
				uint16_t unk116c;
				byte unk116e;
				byte damagealwayskillsplayer;
				byte deployable;
				byte var_e0d42861;
				byte var_3344c07e;
				byte var_70b09d5b;
				byte destroysequipment;
				byte var_8025ffca;
				uint16_t unk1176;
				byte var_f076a292;
				byte unk1179;
				uint16_t unk117a;
				uint16_t unk117c;
				byte unk117e;
				byte doannihilate;
				byte var_6262fd11;
				byte unk1181;
				byte doblowback;
				byte dogibbing;
				byte dogibbingonmelee;
				byte unk1185;
				byte donotdamageowner;
				byte unk1187;
				uint32_t unk1188;
				byte unk118c;
				byte forcedamagehitlocation;
				byte unk118e;
				byte var_33d50507;
				uint64_t unk1190;
				byte grappleweapon;
				byte unk1199;
				uint16_t unk119a;
				uint16_t unk119c;
				byte unk119e;
				byte var_fab9617b;
				byte var_ca947940;
				byte unk11a1;
				uint16_t unk11a2;
				uint16_t unk11a4;
				byte unk11a6;
				byte isnotdroppable;
				uint16_t unk11a8;
				byte issignatureweapon;
				byte istacticalinsertion;
				byte var_76ce72e8;
				byte var_ff0b00ba;
				byte isvaluable;
				byte var_29d24e37;
				uint64_t unk11b0;
				uint64_t unk11b8;
				uint16_t unk11c0;
				byte mountable;
				byte var_ba335ef;
				byte noadslockoncheck;
				byte unk11c5;
				uint16_t unk11c6;
				uint64_t unk11c8;
				byte unk11d0;
				byte var_d69ee9ed;
				uint16_t unk11d2;
				uint32_t unk11d4;
				uint64_t unk11d8;
				uint16_t unk11e0;
				byte unk11e2;
				byte requirelockontofire;
				byte var_8072cf0b;
				byte unk11e5;
				uint16_t unk11e6;
				uint64_t unk11e8;
				uint32_t unk11f0;
				byte unk11f4;
				bool istimeddetonation;
				bool unlimitedAmmo;
				byte unk11f7;
				uint64_t unk11f8;
				uint64_t unk1200;
				byte unk1208;
				byte var_18608bfe;
				byte var_775d2aad;
				byte var_b8a85edd;
				byte var_dbbd4cec;
				uint64_t unk1210;
			};
			static_assert(sizeof(WeaponTunables) == 0x1218);
			WeaponTunables* asset{ (WeaponTunables*)ptr };

			std::filesystem::path outFile{ opt.m_output / "bo4" / "source" / "tables" / "weapon" / "tunables" / std::format("{}.json", hashutils::ExtractTmp("file", asset->name.name))};
			std::filesystem::create_directories(outFile.parent_path());

			utils::raw_file_extractor::JsonWriter json{};

			LOG_INFO("Dump weapontunables {}", outFile.string());

			json.BeginObject();
			{

			}
			json.EndObject();

			if (!json.WriteToFile(outFile)) {
				LOG_ERROR("Error when dumping {}", outFile.string());
			}
		}
	};

	utils::MapAdder<ImplWorker, games::bo4::pool::XAssetType, Worker> impl{ GetWorkers(), games::bo4::pool::XAssetType::ASSET_TYPE_WEAPON_TUNABLES };
}