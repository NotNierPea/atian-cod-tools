#include <includes.hpp>
#include <tools/ff/handlers/handler_game_bo4.hpp>
#include <tools/utils/raw_file_extractor.hpp>
#include <tools/pool_weapon_structs.hpp>

namespace {
	using namespace tool::pool;
	using namespace fastfile::handlers::bo4;

	class WriteOpt {
		utils::raw_file_extractor::JsonWriter& json;
	public:
		WriteOpt(utils::raw_file_extractor::JsonWriter& json) : json(json) {}
		template<typename T>
		void Write(const char* name, T val) {
			json.WriteFieldNameString(name);
			json.WriteValueNumber<T>(val);
		}
		template<>
		void Write(const char* name, XHash hash) {
			if (hash) {
				json.WriteFieldNameString(name);
				json.WriteValueHash(hash);
			}
		}

		template<>
		void Write(const char* name, const char* str) {
			if (str) {
				json.WriteFieldNameString(name);
				json.WriteValueString(str);
			}
		}
		template<>
		void Write(const char* name, bool v) {
			json.WriteFieldNameString(name);
			json.WriteValueBool(v);
		}

		template<>
		void Write(const char* name, ScrString_t scr) {
			if (scr) {
				const char* v{ GetScrString(scr) };
				if (v && *v) {
					json.WriteFieldNameString(name);
					json.WriteValueString(v);
				}
			}
		}
		template<typename T>
		void Write(uint64_t hash, T v) {
			Write<T>(hashutils::ExtractTmp("var", hash), v);
		}
		template<typename T>
		void WriteUnk(const char* name, T val) {
			// ignore empty unk
			if (!val) {
				return;
			}

			Write<T>(name, val);
		}
	};

	class ImplWorker : public Worker {
		void Unlink(fastfile::FastFileOption& opt, void* ptr) {
			struct WeaponTunables {
				uint64_t unk0;
				uint64_t unk8;
				uint64_t unk10;
				uint64_t unk18;
				const char* var_f56ac2bd;
				const char* spawninfluencer;
				XHash var_77b46a8c;
				XHash name;
				XHash unk50;
				XHash unk60;
				XHash unk70;
				uint64_t unk80;
				uint64_t unk88;
				uint64_t unk90;
				uint64_t unk98;
				uint64_t unka0;
				uint64_t unka8;
				uint64_t unkb0;
				uint64_t unkb8;
				uint64_t unkc0;
				uint64_t unkc8;
				uint64_t unkd0;
				uint64_t unkd8;
				uint64_t unke0;
				uint64_t unke8;
				uint64_t unkf0;
				uint64_t unkf8;
				uint64_t unk100;
				uint64_t unk108;
				uint64_t unk110;
				uint64_t unk118;
				uint64_t unk120;
				uint64_t unk128;
				uint64_t unk130;
				uint64_t unk138;
				uint64_t unk140;
				uint64_t unk148;
				uint64_t unk150;
				uint64_t unk158;
				uint64_t unk160;
				uint64_t unk168;
				uint64_t unk170;
				uint64_t unk178;
				uint64_t unk180;
				uint64_t unk188;
				uint64_t unk190;
				uint64_t unk198;
				uint64_t unk1a0;
				uint64_t unk1a8;
				uint64_t unk1b0;
				uint64_t unk1b8;
				uint64_t unk1c0;
				uint64_t unk1c8;
				uint64_t unk1d0;
				uint64_t unk1d8;
				uint64_t unk1e0;
				uint64_t unk1e8;
				uint64_t unk1f0;
				uint32_t unk1f8;
				ScrString_t unk1fc;
				ScrString_t unk200;
				ScrString_t unk204;
				ScrString_t hackertriggerorigintag;
				uint32_t unk20c;
				uint64_t unk210;
				uint64_t unk218;
				uint32_t unk220;
				uint32_t unk224;
				uint64_t unk228;
				int32_t explosioninnerdamage;
				uint32_t unk234;
				uint64_t unk238;
				uint64_t unk240;
				int32_t explosionouterdamage;
				uint32_t unk24c;
				uint64_t unk250;
				uint64_t unk258;
				uint64_t unk260;
				uint64_t unk268;
				uint64_t unk270;
				uint64_t unk278;
				uint64_t unk280;
				uint64_t unk288;
				uint64_t unk290;
				uint64_t unk298;
				uint64_t unk2a0;
				uint32_t unk2a8;
				float gadget_shockfield_radius;
				float gadget_shockfield_damage;
				int32_t gadget_flickerondamage;
				int32_t gadget_flickeronpowerloss;
				int32_t var_e4109b63;
				uint32_t unk2c0;
				int32_t gadget_max_hitpoints;
				uint64_t unk2c8;
				uint64_t unk2d0;
				uint64_t unk2d8;
				uint32_t unk2e0;
				int32_t var_c4d4d2a9;
				uint32_t unk2e8;
				float gadget_powerofflossondamage;
				uint64_t unk2f0;
				uint32_t unk2f8;
				int32_t gadget_powergainonretrieve;
				float gadget_powergainscorefactor;
				float var_c15c6b39;
				int32_t var_6a864cad;
				uint32_t unk30c;
				uint64_t unk310;
				int32_t gadget_powermoveloss;
				float gadget_powermovespeed;
				float gadget_poweronlossondamage;
				uint32_t unk324;
				byte var_58543a1c;
				byte unk329;
				uint16_t unk32a;
				int32_t var_68a0f062;
				float var_abb570e0;
				int32_t var_829de2ac;
				uint32_t unk338;
				float var_e4d4fa7e;
				float gadget_powerreplenishfactor;
				int32_t gadget_power_round_end_active_penalty;
				int32_t gadget_powersprintloss;
				int32_t var_d911d477;
				uint64_t unk350;
				uint64_t unk358;
				float gadget_power_usage_rate;
				float var_e1811962;
				float var_66103577;
				float var_f9eec1ec;
				int32_t var_6821283d;
				int32_t var_81683931;
				int32_t var_1e89f40;
				int32_t gadget_pulse_duration;
				uint32_t unk380;
				int32_t var_4d88a1ff;
				int32_t var_9d776ba6;
				int32_t var_b9951041;
				int32_t var_8e0b0827;
				float var_a2d7b97c;
				float var_5be370e9;
				int32_t var_42a3cafc;
				uint32_t unk3a0;
				int32_t gadget_pulse_max_range;
				uint64_t unk3a8;
				uint64_t unk3b0;
				int32_t var_44c79c09;
				uint32_t unk3bc;
				gadgetType_e gadget_type;
				uint32_t unk3c4;
				uint64_t unk3c8;
				uint64_t unk3d0;
				uint32_t unk3d8;
				uint16_t unk3dc;
				byte var_2cb95b88;
				byte unk3df;
				uint64_t unk3e0;
				byte gadget_turnoff_onempjammed;
				byte unk3e9;
				uint16_t unk3ea;
				uint32_t unk3ec;
				byte gadget_heroversion_2_0;
				byte var_256488f1;
				uint16_t unk3f2;
				byte unk3f4;
				byte gadget_powergainscoreignoreself;
				byte var_f23e9d19;
				byte gadget_powergainscoreignorewhenactive;
				uint16_t unk3f8;
				byte unk3fa;
				byte var_ddaa57f2;
				byte gadget_power_reset_on_class_change;
				byte unk3fd;
				byte gadget_power_reset_on_spawn;
				byte gadget_power_reset_on_team_change;
				byte gadget_power_reset_on_round_switch;
				byte gadget_power_consume_on_ammo_use;
				byte var_5801b768;
				byte unk403;
				byte var_bec5136b;
				byte unk405;
				byte unk406;
				byte var_28bb357c;
				byte unk408;
				byte var_f10d73e1;
				byte var_7b5016a7;
				byte unk40b;
				byte unk40c;
				byte var_ce34bb7e;
				uint16_t unk40e;
				guidedMissileType_t guidedMissileType;
				uint32_t unk414;
				uint64_t unk418;
				uint64_t unk420;
				uint64_t unk428;
				uint64_t unk430;
				uint64_t unk438;
				uint64_t unk440;
				uint64_t unk448;
				uint64_t unk450;
				uint64_t unk458;
				uint64_t unk460;
				uint64_t unk468;
				uint64_t unk470;
				uint64_t unk478;
				uint64_t unk480;
				uint64_t unk488;
				uint64_t unk490;
				uint64_t unk498;
				uint64_t unk4a0;
				uint64_t unk4a8;
				ImpactType impactType;
				OffhandClass offhandClass;
				OffhandSlot offhandSlot;
				uint32_t unk4bc;
				uint64_t unk4c0;
				uint64_t unk4c8;
				uint64_t unk4d0;
				uint64_t unk4d8;
				uint64_t unk4e0;
				uint64_t unk4e8;
				uint64_t unk4f0;
				uint64_t unk4f8;
				uint64_t unk500;
				uint64_t unk508;
				uint64_t unk510;
				uint64_t unk518;
				uint64_t unk520;
				uint64_t unk528;
				uint64_t unk530;
				uint64_t unk538;
				uint64_t unk540;
				uint64_t unk548;
				uint64_t unk550;
				uint64_t unk558;
				uint64_t unk560;
				uint32_t unk568;
				uint32_t unk56c;
				float var_27c94b15;
				float var_16e90b80;
				float var_6cb9946f;
				float var_40ffe7d2;
				weapClass_t weapClass;
				uint32_t unk584;
				uint32_t unk588;
				weapInventoryType_t inventoryType;
				uint32_t unk590;
				lockOnType_t lockontype;
				uint64_t unk598;
				uint32_t unk5a0;
				uint32_t unk5a4;
				uint32_t unk5a8;
				projExplosionType_t projExplosionType;
				uint64_t unk5b0;
				uint64_t unk5b8;
				weapType_t weapType;
				uint32_t unk5c4;
				uint64_t unk5c8;
				uint64_t unk5d0;
				uint64_t unk5d8;
				uint64_t unk5e0;
				uint64_t unk5e8;
				uint64_t unk5f0;
				uint64_t unk5f8;
				uint64_t unk600;
				uint64_t unk608;
				uint64_t unk610;
				float aimeleerange;
				uint32_t unk61c;
				uint64_t unk620;
				uint64_t unk628;
				uint64_t unk630;
				uint64_t unk638;
				uint64_t unk640;
				uint32_t unk648;
				float var_6844746b;
				float var_e2b40cd5;
				uint32_t unk654;
				uint64_t unk658;
				uint64_t unk660;
				uint64_t unk668;
				uint64_t unk670;
				uint64_t unk678;
				uint64_t unk680;
				uint64_t unk688;
				uint64_t unk690;
				float damagetoownerscalar;
				uint32_t unk69c;
				uint64_t unk6a0;
				uint64_t unk6a8;
				float var_c94f007c;
				float var_3a00e7eb;
				float var_2cf65b96;
				uint32_t unk6bc;
				uint64_t unk6c0;
				uint64_t unk6c8;
				uint64_t unk6d0;
				uint64_t unk6d8;
				uint64_t unk6e0;
				uint64_t unk6e8;
				uint64_t unk6f0;
				uint64_t unk6f8;
				uint64_t unk700;
				uint64_t unk708;
				uint64_t unk710;
				uint64_t unk718;
				uint64_t unk720;
				uint64_t unk728;
				uint32_t unk730;
				float adsspread;
				uint64_t unk738;
				uint64_t unk740;
				uint64_t unk748;
				uint64_t unk750;
				uint64_t unk758;
				uint64_t unk760;
				uint64_t unk768;
				uint64_t unk770;
				uint64_t unk778;
				uint64_t unk780;
				uint64_t unk788;
				uint64_t unk790;
				uint64_t unk798;
				uint64_t unk7a0;
				uint64_t unk7a8;
				uint64_t unk7b0;
				uint64_t unk7b8;
				uint64_t unk7c0;
				uint64_t unk7c8;
				uint64_t unk7d0;
				uint64_t unk7d8;
				uint64_t unk7e0;
				uint64_t unk7e8;
				uint64_t unk7f0;
				uint64_t unk7f8;
				uint64_t unk800;
				uint64_t unk808;
				uint64_t unk810;
				uint64_t unk818;
				uint64_t unk820;
				uint64_t unk828;
				uint64_t unk830;
				uint32_t unk838;
				float fightdist;
				uint64_t unk840;
				uint64_t unk848;
				uint32_t unk850;
				float var_1f13c7f1;
				uint64_t unk858;
				uint64_t unk860;
				int32_t var_5af80bb6;
				uint32_t unk86c;
				uint64_t unk870;
				uint64_t unk878;
				uint64_t unk880;
				uint64_t unk888;
				uint64_t unk890;
				uint64_t unk898;
				uint64_t unk8a0;
				uint64_t unk8a8;
				uint64_t unk8b0;
				uint64_t unk8b8;
				float var_36c76157;
				uint32_t unk8c4;
				uint64_t unk8c8;
				uint64_t unk8d0;
				uint64_t unk8d8;
				uint64_t unk8e0;
				uint64_t unk8e8;
				uint64_t unk8f0;
				uint32_t unk8f8;
				float var_19f920eb;
				uint64_t unk900;
				uint64_t unk908;
				uint64_t unk910;
				uint64_t unk918;
				uint64_t unk920;
				uint64_t unk928;
				uint64_t unk930;
				uint64_t unk938;
				uint64_t unk940;
				uint32_t unk948;
				float maxdist;
				float maxgibdistance;
				uint32_t unk954;
				uint64_t unk958;
				uint64_t unk960;
				uint64_t unk968;
				uint32_t unk970;
				float meleelungerange;
				uint64_t unk978;
				float var_9aa1ef19;
				uint32_t unk984;
				float var_cd539cb2;
				float var_cb3d0f65;
				float var_7872b3a;
				float var_367c47fc;
				float var_ccebc40;
				uint32_t unk99c;
				uint64_t unk9a0;
				uint64_t unk9a8;
				uint32_t unk9b0;
				float var_deb0b2fe;
				uint64_t unk9b8;
				uint64_t unk9c0;
				uint64_t unk9c8;
				uint64_t unk9d0;
				uint64_t unk9d8;
				uint64_t unk9e0;
				uint64_t unk9e8;
				uint64_t unk9f0;
				float lifetime;
				uint32_t unk9fc;
				uint64_t unka00;
				uint64_t unka08;
				uint64_t unka10;
				uint64_t unka18;
				uint64_t unka20;
				uint64_t unka28;
				uint64_t unka30;
				uint64_t unka38;
				uint64_t unka40;
				uint64_t unka48;
				uint64_t unka50;
				uint64_t unka58;
				uint64_t unka60;
				uint64_t unka68;
				uint64_t unka70;
				uint64_t unka78;
				uint32_t unka80;
				float sprintboostduration;
				float sprintboostradius;
				uint32_t unka8c;
				uint64_t unka90;
				uint64_t unka98;
				uint64_t unkaa0;
				uint64_t unkaa8;
				uint64_t unkab0;
				uint64_t unkab8;
				uint64_t unkac0;
				uint32_t unkac8;
				float lockonlossanglehorizontal;
				float lockonlossanglevertical;
				float lockonanglehorizontal;
				float lockonanglevertical;
				uint32_t unkadc;
				uint64_t unkae0;
				float vehicleprojectiledamagescalar;
				float vehicleprojectilesplashdamagescalar;
				uint64_t unkaf0;
				uint64_t unkaf8;
				uint64_t unkb00;
				uint64_t unkb08;
				uint32_t unkb10;
				float var_416021d8;
				uint64_t unkb18;
				uint64_t unkb20;
				uint64_t unkb28;
				uint64_t unkb30;
				uint64_t unkb38;
				uint64_t unkb40;
				uint64_t unkb48;
				uint64_t unkb50;
				uint64_t unkb58;
				uint32_t unkb60;
				int32_t aiFuseTime;
				uint64_t unkb68;
				uint64_t unkb70;
				uint64_t unkb78;
				uint32_t unkb80;
				int32_t burndamage;
				int32_t burndamageinterval;
				int32_t burnduration;
				int32_t burstcount;
				uint32_t unkb94;
				uint64_t unkb98;
				uint64_t unkba0;
				uint64_t unkba8;
				uint64_t unkbb0;
				uint64_t unkbb8;
				int32_t var_98333ae;
				int32_t var_1c0e3cb7;
				int32_t var_4941de5;
				uint32_t unkbcc;
				uint64_t unkbd0;
				uint64_t unkbd8;
				uint64_t unkbe0;
				uint64_t unkbe8;
				uint64_t unkbf0;
				uint64_t unkbf8;
				uint32_t unkc00;
				int32_t var_f7e67f28;
				int32_t var_227c90e1;
				int32_t var_ab300840;
				int32_t var_849af6b4;
				int32_t var_c4aae0fa;
				int32_t var_5ac2e7a4;
				int32_t var_76127e14;
				uint64_t unkc20;
				uint64_t unkc28;
				uint64_t unkc30;
				uint64_t unkc38;
				uint64_t unkc40;
				uint64_t unkc48;
				uint64_t unkc50;
				uint64_t unkc58;
				uint64_t unkc60;
				uint64_t unkc68;
				uint32_t unkc70;
				int32_t var_df381b5d;
				int32_t var_a8bd8bb2;
				int32_t var_8134b209;
				int32_t heal;
				int32_t var_4465ef1e;
				uint64_t unkc88;
				uint64_t unkc90;
				uint64_t unkc98;
				uint64_t unkca0;
				uint32_t unkca8;
				int32_t ammoindex;
				uint64_t unkcb0;
				uint64_t unkcb8;
				uint32_t iClipSize;
				int32_t var_ec2cbce2;
				int32_t var_df0f9ce9;
				uint32_t unkccc;
				uint64_t unkcd0;
				uint64_t unkcd8;
				uint64_t unkce0;
				uint64_t unkce8;
				uint64_t unkcf0;
				uint64_t unkcf8;
				uint64_t unkd00;
				uint64_t unkd08;
				uint64_t unkd10;
				uint64_t unkd18;
				uint32_t unkd20;
				int32_t var_1123a989;
				uint64_t unkd28;
				uint64_t unkd30;
				uint64_t unkd38;
				uint64_t unkd40;
				uint32_t unkd48;
				uint32_t iMaxAmmo;
				uint32_t meleedamage;
				uint32_t unkd54;
				uint64_t unkd58;
				uint32_t unkd60;
				uint32_t unkd64;
				uint32_t unkd68;
				uint32_t meleetime;
				uint64_t unkd70;
				uint64_t unkd78;
				uint64_t unkd80;
				uint64_t unkd88;
				uint64_t unkd90;
				uint64_t unkd98;
				uint64_t unkda0;
				uint64_t unkda8;
				uint64_t unkdb0;
				uint64_t unkdb8;
				uint64_t unkdc0;
				uint64_t unkdc8;
				uint64_t unkdd0;
				uint64_t unkdd8;
				uint64_t unkde0;
				uint64_t unkde8;
				uint64_t unkdf0;
				uint64_t unkdf8;
				uint64_t unke00;
				uint64_t unke08;
				uint64_t unke10;
				uint64_t unke18;
				uint64_t unke20;
				uint64_t unke28;
				uint64_t unke30;
				uint64_t unke38;
				uint32_t iStartAmmo;
				int32_t fuellife;
				uint64_t unke48;
				int32_t lockonlossradius;
				uint32_t unke54;
				uint64_t unke58;
				int32_t lockonminrange;
				int32_t lockonradius;
				uint32_t unke68;
				int32_t lockonscreenradius;
				uint64_t unke70;
				uint64_t unke78;
				uint64_t unke80;
				uint64_t unke88;
				int32_t maxheal;
				int32_t maxinstancesallowed;
				uint64_t unke98;
				uint64_t unkea0;
				uint64_t unkea8;
				uint64_t unkeb0;
				uint64_t unkeb8;
				uint64_t unkec0;
				uint64_t unkec8;
				uint32_t unked0;
				uint32_t meleechargetime;
				uint64_t unked8;
				uint64_t unkee0;
				uint64_t unkee8;
				uint64_t unkef0;
				uint64_t unkef8;
				uint64_t unkf00;
				uint64_t unkf08;
				uint64_t unkf10;
				uint32_t meleepowertime;
				uint32_t unkf1c;
				uint64_t unkf20;
				uint32_t meleepowertimeleft;
				uint32_t unkf2c;
				uint64_t unkf30;
				uint64_t unkf38;
				uint32_t unkf40;
				int32_t var_cddb5cd0;
				uint32_t unkf48;
				int32_t var_e5db3b95;
				int32_t var_61d29b2f;
				int32_t multidetonation;
				int32_t var_c264efc6;
				int32_t var_95d8fabf;
				uint64_t unkf60;
				uint64_t unkf68;
				uint64_t unkf70;
				uint64_t unkf78;
				uint64_t unkf80;
				uint64_t unkf88;
				int32_t playerdamage;
				uint32_t unkf94;
				uint64_t unkf98;
				uint64_t unkfa0;
				uint64_t unkfa8;
				uint64_t unkfb0;
				uint64_t unkfb8;
				int32_t var_ac36c1db;
				uint32_t unkfc4;
				uint64_t unkfc8;
				uint64_t unkfd0;
				uint64_t unkfd8;
				uint64_t unkfe0;
				uint64_t unkfe8;
				uint64_t unkff0;
				uint64_t unkff8;
				uint64_t unk1000;
				int32_t var_60563796;
				int32_t var_7a93ed37;
				uint64_t unk1010;
				uint64_t unk1018;
				uint64_t unk1020;
				uint64_t unk1028;
				uint64_t unk1030;
				uint64_t unk1038;
				uint64_t unk1040;
				uint64_t unk1048;
				uint64_t unk1050;
				uint64_t unk1058;
				uint64_t unk1060;
				uint64_t unk1068;
				uint64_t unk1070;
				uint64_t unk1078;
				uint64_t unk1080;
				uint64_t unk1088;
				uint64_t unk1090;
				uint64_t unk1098;
				uint64_t unk10a0;
				uint64_t unk10a8;
				uint64_t unk10b0;
				byte unk10b8;
				byte unk10b9;
				byte unk10ba;
				byte unk10bb;
				byte unk10bc;
				byte unk10bd;
				byte unk10be;
				byte ammoCountClipRelative;
				byte unk10c0;
				byte var_8032088a;
				byte ammoregen;
				byte unk10c3;
				uint32_t unk10c4;
				uint32_t unk10c8;
				uint16_t unk10cc;
				byte var_f6dea63a;
				byte unk10cf;
				byte unk10d0;
				byte altoffhand;
				uint16_t unk10d2;
				byte unk10d4;
				bool bAltWeaponDisableSwitching;
				byte unk10d6;
				byte unk10d7;
				byte unk10d8;
				byte anyplayercanretrieve;
				byte unk10da;
				byte isboltaction;
				uint16_t unk10dc;
				byte unk10de;
				byte bulletimpactexplode;
				uint16_t unk10e0;
				byte canuseunderwater;
				byte iscliponly;
				uint16_t unk10e4;
				byte var_337fc1cf;
				byte craftitem;
				byte var_9fffdcee;
				byte decoy;
				byte destroyablebytrophysystem;
				bool bDieOnRespawn;
				byte unk10ec;
				byte disabledeploy;
				uint16_t unk10ee;
				uint16_t unk10f0;
				byte unk10f2;
				byte disallowatmatchstart;
				uint16_t unk10f4;
				byte dodamagefeedback;
				byte doempdestroyfx;
				byte doesfiredamage;
				byte dohackedstats;
				byte dostun;
				byte unk10fb;
				byte unk10fc;
				bool isdualwield;
				byte unk10fe;
				byte unk10ff;
				uint16_t unk1100;
				byte unk1102;
				byte var_251796e3;
				uint16_t unk1104;
				byte unk1106;
				byte ignoresflakjacket;
				byte ignoreslightarmor;
				byte ignorespowerarmor;
				byte ignoreteamkills;
				byte unk110b;
				byte unk110c;
				byte isaikillstreakdamage;
				byte isballisticknife;
				byte iscarriedkillstreak;
				byte isemp;
				byte isflash;
				byte isflourishweapon;
				byte isgameplayweapon;
				byte ishacktoolweapon;
				byte bIsHybridWeapon;
				byte isperkbottle;
				byte isscavengable;
				byte issniperweapon;
				byte isstun;
				byte issupplydropweapon;
				byte unk111b;
				byte unk111c;
				byte var_130391b9;
				byte var_6f12adba;
				byte blocksprone;
				uint16_t unk1120;
				byte meleeignoreslightarmor;
				byte unk1123;
				uint32_t unk1124;
				uint32_t unk1128;
				byte unk112c;
				byte nohitmarker;
				byte unk112e;
				byte nonstowedweapon;
				uint32_t unk1130;
				byte notkillstreak;
				byte unk1135;
				uint16_t unk1136;
				uint64_t unk1138;
				uint32_t unk1140;
				byte setusedstat;
				byte unk1145;
				byte shownenemyequip;
				byte shownenemyexplo;
				byte shownretrievable;
				byte unk1149;
				byte skipbattlechatterkill;
				byte skipbattlechatterreload;
				byte skiplowammovox;
				byte specialpain;
				byte isthrowback;
				byte unk114f;
				uint64_t unk1150;
				uint64_t unk1158;
				uint32_t unk1160;
				byte unk1164;
				byte var_9111ccc0;
				uint16_t unk1166;
				uint32_t unk1168;
				uint16_t unk116c;
				byte unk116e;
				byte damagealwayskillsplayer;
				byte deployable;
				byte var_e0d42861;
				byte var_3344c07e;
				byte var_70b09d5b;
				byte destroysequipment;
				byte var_8025ffca;
				uint16_t unk1176;
				byte var_f076a292;
				byte unk1179;
				uint16_t unk117a;
				uint16_t unk117c;
				byte unk117e;
				byte doannihilate;
				byte var_6262fd11;
				byte unk1181;
				byte doblowback;
				byte dogibbing;
				byte dogibbingonmelee;
				byte unk1185;
				byte donotdamageowner;
				byte unk1187;
				uint32_t unk1188;
				byte unk118c;
				byte forcedamagehitlocation;
				byte unk118e;
				byte var_33d50507;
				uint64_t unk1190;
				byte grappleweapon;
				byte unk1199;
				uint16_t unk119a;
				uint16_t unk119c;
				byte unk119e;
				byte var_fab9617b;
				byte var_ca947940;
				byte unk11a1;
				uint16_t unk11a2;
				uint16_t unk11a4;
				byte unk11a6;
				byte isnotdroppable;
				uint16_t unk11a8;
				byte issignatureweapon;
				byte istacticalinsertion;
				byte var_76ce72e8;
				byte var_ff0b00ba;
				byte isvaluable;
				byte var_29d24e37;
				uint64_t unk11b0;
				uint64_t unk11b8;
				uint16_t unk11c0;
				byte mountable;
				byte var_ba335ef;
				byte noadslockoncheck;
				byte unk11c5;
				uint16_t unk11c6;
				uint64_t unk11c8;
				byte unk11d0;
				byte var_d69ee9ed;
				uint16_t unk11d2;
				uint32_t unk11d4;
				uint64_t unk11d8;
				uint16_t unk11e0;
				byte unk11e2;
				byte requirelockontofire;
				byte var_8072cf0b;
				byte unk11e5;
				uint16_t unk11e6;
				uint64_t unk11e8;
				uint32_t unk11f0;
				byte unk11f4;
				bool istimeddetonation;
				bool unlimitedAmmo;
				byte unk11f7;
				uint64_t unk11f8;
				uint64_t unk1200;
				byte unk1208;
				byte var_18608bfe;
				byte var_775d2aad;
				byte var_b8a85edd;
				byte var_dbbd4cec;
				uint64_t unk1210;
			};
			static_assert(sizeof(WeaponTunables) == 0x1218);
			WeaponTunables* asset{ (WeaponTunables*)ptr };

			std::filesystem::path outFile{ opt.m_output / "bo4" / "source" / "tables" / "weapon" / "tunables" / std::format("{}.json", hashutils::ExtractTmp("file", asset->name.name))};
			std::filesystem::create_directories(outFile.parent_path());

			utils::raw_file_extractor::JsonWriter json{};

			LOG_INFO("Dump weapontunables {}", outFile.string());

			json.BeginObject();
			{
				WriteOpt w{ json };
				w.Write("name", asset->name);
				w.Write("adsspread", asset->adsspread);
				w.Write("aiFuseTime", asset->aiFuseTime);
				w.Write("aimeleerange", asset->aimeleerange);
				w.Write("altoffhand", asset->altoffhand);
				w.Write("ammoCountClipRelative", asset->ammoCountClipRelative);
				w.Write("ammoindex", asset->ammoindex);
				w.Write("ammoregen", asset->ammoregen);
				w.Write("anyplayercanretrieve", asset->anyplayercanretrieve);
				w.Write("bAltWeaponDisableSwitching", asset->bAltWeaponDisableSwitching);
				w.Write("bDieOnRespawn", asset->bDieOnRespawn);
				w.Write("bIsHybridWeapon", asset->bIsHybridWeapon);
				w.Write("blocksprone", asset->blocksprone);
				w.Write("bulletimpactexplode", asset->bulletimpactexplode);
				w.Write("burndamage", asset->burndamage);
				w.Write("burndamageinterval", asset->burndamageinterval);
				w.Write("burnduration", asset->burnduration);
				w.Write("burstcount", asset->burstcount);
				w.Write("canuseunderwater", asset->canuseunderwater);
				w.Write("craftitem", asset->craftitem);
				w.Write("damagealwayskillsplayer", asset->damagealwayskillsplayer);
				w.Write("damagetoownerscalar", asset->damagetoownerscalar);
				w.Write("decoy", asset->decoy);
				w.Write("deployable", asset->deployable);
				w.Write("destroyablebytrophysystem", asset->destroyablebytrophysystem);
				w.Write("destroysequipment", asset->destroysequipment);
				w.Write("disabledeploy", asset->disabledeploy);
				w.Write("disallowatmatchstart", asset->disallowatmatchstart);
				w.Write("doannihilate", asset->doannihilate);
				w.Write("doblowback", asset->doblowback);
				w.Write("dodamagefeedback", asset->dodamagefeedback);
				w.Write("doempdestroyfx", asset->doempdestroyfx);
				w.Write("doesfiredamage", asset->doesfiredamage);
				w.Write("dogibbing", asset->dogibbing);
				w.Write("dogibbingonmelee", asset->dogibbingonmelee);
				w.Write("dohackedstats", asset->dohackedstats);
				w.Write("donotdamageowner", asset->donotdamageowner);
				w.Write("dostun", asset->dostun);
				w.Write("explosioninnerdamage", asset->explosioninnerdamage);
				w.Write("explosionouterdamage", asset->explosionouterdamage);
				w.Write("fightdist", asset->fightdist);
				w.Write("forcedamagehitlocation", asset->forcedamagehitlocation);
				w.Write("fuellife", asset->fuellife);
				w.Write("gadget_flickerondamage", asset->gadget_flickerondamage);
				w.Write("gadget_flickeronpowerloss", asset->gadget_flickeronpowerloss);
				w.Write("gadget_heroversion_2_0", asset->gadget_heroversion_2_0);
				w.Write("gadget_max_hitpoints", asset->gadget_max_hitpoints);
				w.Write("gadget_power_consume_on_ammo_use", asset->gadget_power_consume_on_ammo_use);
				w.Write("gadget_power_reset_on_class_change", asset->gadget_power_reset_on_class_change);
				w.Write("gadget_power_reset_on_round_switch", asset->gadget_power_reset_on_round_switch);
				w.Write("gadget_power_reset_on_spawn", asset->gadget_power_reset_on_spawn);
				w.Write("gadget_power_reset_on_team_change", asset->gadget_power_reset_on_team_change);
				w.Write("gadget_power_round_end_active_penalty", asset->gadget_power_round_end_active_penalty);
				w.Write("gadget_power_usage_rate", asset->gadget_power_usage_rate);
				w.Write("gadget_powergainonretrieve", asset->gadget_powergainonretrieve);
				w.Write("gadget_powergainscorefactor", asset->gadget_powergainscorefactor);
				w.Write("gadget_powergainscoreignoreself", asset->gadget_powergainscoreignoreself);
				w.Write("gadget_powergainscoreignorewhenactive", asset->gadget_powergainscoreignorewhenactive);
				w.Write("gadget_powermoveloss", asset->gadget_powermoveloss);
				w.Write("gadget_powermovespeed", asset->gadget_powermovespeed);
				w.Write("gadget_powerofflossondamage", asset->gadget_powerofflossondamage);
				w.Write("gadget_poweronlossondamage", asset->gadget_poweronlossondamage);
				w.Write("gadget_powerreplenishfactor", asset->gadget_powerreplenishfactor);
				w.Write("gadget_powersprintloss", asset->gadget_powersprintloss);
				w.Write("gadget_pulse_duration", asset->gadget_pulse_duration);
				w.Write("gadget_pulse_max_range", asset->gadget_pulse_max_range);
				w.Write("gadget_shockfield_damage", asset->gadget_shockfield_damage);
				w.Write("gadget_shockfield_radius", asset->gadget_shockfield_radius);
				w.Write("gadget_turnoff_onempjammed", asset->gadget_turnoff_onempjammed);
				w.Write("gadget_type", GadgetTypeName(asset->gadget_type));
				w.Write("grappleweapon", asset->grappleweapon);
				w.Write("guidedMissileType", GuidedMissileTypeName(asset->guidedMissileType));
				w.Write("hackertriggerorigintag", asset->hackertriggerorigintag);
				w.Write("heal", asset->heal);
				w.Write("iClipSize", asset->iClipSize);
				w.Write("ignoresflakjacket", asset->ignoresflakjacket);
				w.Write("ignoreslightarmor", asset->ignoreslightarmor);
				w.Write("ignorespowerarmor", asset->ignorespowerarmor);
				w.Write("ignoreteamkills", asset->ignoreteamkills);
				w.Write("iMaxAmmo", asset->iMaxAmmo);
				w.Write("impactType", ImpactTypeName(asset->impactType));
				w.Write("inventoryType", WeapInventoryTypeName(asset->inventoryType));
				w.Write("isaikillstreakdamage", asset->isaikillstreakdamage);
				w.Write("isballisticknife", asset->isballisticknife);
				w.Write("isboltaction", asset->isboltaction);
				w.Write("iscarriedkillstreak", asset->iscarriedkillstreak);
				w.Write("iscliponly", asset->iscliponly);
				w.Write("isdualwield", asset->isdualwield);
				w.Write("isemp", asset->isemp);
				w.Write("isflash", asset->isflash);
				w.Write("isflourishweapon", asset->isflourishweapon);
				w.Write("isgameplayweapon", asset->isgameplayweapon);
				w.Write("ishacktoolweapon", asset->ishacktoolweapon);
				w.Write("isnotdroppable", asset->isnotdroppable);
				w.Write("isperkbottle", asset->isperkbottle);
				w.Write("isscavengable", asset->isscavengable);
				w.Write("issignatureweapon", asset->issignatureweapon);
				w.Write("issniperweapon", asset->issniperweapon);
				w.Write("isstun", asset->isstun);
				w.Write("issupplydropweapon", asset->issupplydropweapon);
				w.Write("istacticalinsertion", asset->istacticalinsertion);
				w.Write("iStartAmmo", asset->iStartAmmo);
				w.Write("isthrowback", asset->isthrowback);
				w.Write("istimeddetonation", asset->istimeddetonation);
				w.Write("isvaluable", asset->isvaluable);
				w.Write("lifetime", asset->lifetime);
				w.Write("lockonanglehorizontal", asset->lockonanglehorizontal);
				w.Write("lockonanglevertical", asset->lockonanglevertical);
				w.Write("lockonlossanglehorizontal", asset->lockonlossanglehorizontal);
				w.Write("lockonlossanglevertical", asset->lockonlossanglevertical);
				w.Write("lockonlossradius", asset->lockonlossradius);
				w.Write("lockonminrange", asset->lockonminrange);
				w.Write("lockonradius", asset->lockonradius);
				w.Write("lockonscreenradius", asset->lockonscreenradius);
				w.Write("lockontype", LockOnTypeName(asset->lockontype));
				w.Write("maxdist", asset->maxdist);
				w.Write("maxgibdistance", asset->maxgibdistance);
				w.Write("maxheal", asset->maxheal);
				w.Write("maxinstancesallowed", asset->maxinstancesallowed);
				w.Write("meleechargetime", asset->meleechargetime);
				w.Write("meleedamage", asset->meleedamage);
				w.Write("meleeignoreslightarmor", asset->meleeignoreslightarmor);
				w.Write("meleelungerange", asset->meleelungerange);
				w.Write("meleepowertime", asset->meleepowertime);
				w.Write("meleepowertimeleft", asset->meleepowertimeleft);
				w.Write("meleetime", asset->meleetime);
				w.Write("mountable", asset->mountable);
				w.Write("multidetonation", asset->multidetonation);
				w.Write("noadslockoncheck", asset->noadslockoncheck);
				w.Write("nohitmarker", asset->nohitmarker);
				w.Write("nonstowedweapon", asset->nonstowedweapon);
				w.Write("notkillstreak", asset->notkillstreak);
				w.Write("offhandClass", OffhandClassName(asset->offhandClass));
				w.Write("offhandSlot", OffhandSlotName(asset->offhandSlot));
				w.Write("playerdamage", asset->playerdamage);
				w.Write("projExplosionType", ProjExplosionTypeName(asset->projExplosionType));
				w.Write("requirelockontofire", asset->requirelockontofire);
				w.Write("setusedstat", asset->setusedstat);
				w.Write("shownenemyequip", asset->shownenemyequip);
				w.Write("shownenemyexplo", asset->shownenemyexplo);
				w.Write("shownretrievable", asset->shownretrievable);
				w.Write("skipbattlechatterkill", asset->skipbattlechatterkill);
				w.Write("skipbattlechatterreload", asset->skipbattlechatterreload);
				w.Write("skiplowammovox", asset->skiplowammovox);
				w.Write("spawninfluencer", asset->spawninfluencer);
				w.Write("specialpain", asset->specialpain);
				w.Write("sprintboostduration", asset->sprintboostduration);
				w.Write("sprintboostradius", asset->sprintboostradius);
				w.Write("unlimitedAmmo", asset->unlimitedAmmo);
				w.Write(0x1123a989, asset->var_1123a989);
				w.Write(0x130391b9, asset->var_130391b9);
				w.Write(0x16e90b80, asset->var_16e90b80);
				w.Write(0x18608bfe, asset->var_18608bfe);
				w.Write(0x19f920eb, asset->var_19f920eb);
				w.Write(0x1c0e3cb7, asset->var_1c0e3cb7);
				w.Write(0x1e89f40, asset->var_1e89f40);
				w.Write(0x1f13c7f1, asset->var_1f13c7f1);
				w.Write(0x227c90e1, asset->var_227c90e1);
				w.Write(0x251796e3, asset->var_251796e3);
				w.Write(0x256488f1, asset->var_256488f1);
				w.Write(0x27c94b15, asset->var_27c94b15);
				w.Write(0x28bb357c, asset->var_28bb357c);
				w.Write(0x29d24e37, asset->var_29d24e37);
				w.Write(0x2cb95b88, asset->var_2cb95b88);
				w.Write(0x2cf65b96, asset->var_2cf65b96);
				w.Write(0x3344c07e, asset->var_3344c07e);
				w.Write(0x337fc1cf, asset->var_337fc1cf);
				w.Write(0x33d50507, asset->var_33d50507);
				w.Write(0x367c47fc, asset->var_367c47fc);
				w.Write(0x36c76157, asset->var_36c76157);
				w.Write(0x3a00e7eb, asset->var_3a00e7eb);
				w.Write(0x40ffe7d2, asset->var_40ffe7d2);
				w.Write(0x416021d8, asset->var_416021d8);
				w.Write(0x42a3cafc, asset->var_42a3cafc);
				w.Write(0x4465ef1e, asset->var_4465ef1e);
				w.Write(0x44c79c09, asset->var_44c79c09);
				w.Write(0x4941de5, asset->var_4941de5);
				w.Write(0x4d88a1ff, asset->var_4d88a1ff);
				w.Write(0x5801b768, asset->var_5801b768);
				w.Write(0x58543a1c, asset->var_58543a1c);
				w.Write(0x5ac2e7a4, asset->var_5ac2e7a4);
				w.Write(0x5af80bb6, asset->var_5af80bb6);
				w.Write(0x5be370e9, asset->var_5be370e9);
				w.Write(0x60563796, asset->var_60563796);
				w.Write(0x61d29b2f, asset->var_61d29b2f);
				w.Write(0x6262fd11, asset->var_6262fd11);
				w.Write(0x66103577, asset->var_66103577);
				w.Write(0x6821283d, asset->var_6821283d);
				w.Write(0x6844746b, asset->var_6844746b);
				w.Write(0x68a0f062, asset->var_68a0f062);
				w.Write(0x6a864cad, asset->var_6a864cad);
				w.Write(0x6cb9946f, asset->var_6cb9946f);
				w.Write(0x6f12adba, asset->var_6f12adba);
				w.Write(0x70b09d5b, asset->var_70b09d5b);
				w.Write(0x76127e14, asset->var_76127e14);
				w.Write(0x76ce72e8, asset->var_76ce72e8);
				w.Write(0x775d2aad, asset->var_775d2aad);
				w.Write(0x77b46a8c, asset->var_77b46a8c);
				w.Write(0x7872b3a, asset->var_7872b3a);
				w.Write(0x7a93ed37, asset->var_7a93ed37);
				w.Write(0x7b5016a7, asset->var_7b5016a7);
				w.Write(0x8025ffca, asset->var_8025ffca);
				w.Write(0x8032088a, asset->var_8032088a);
				w.Write(0x8072cf0b, asset->var_8072cf0b);
				w.Write(0x8134b209, asset->var_8134b209);
				w.Write(0x81683931, asset->var_81683931);
				w.Write(0x829de2ac, asset->var_829de2ac);
				w.Write(0x849af6b4, asset->var_849af6b4);
				w.Write(0x8e0b0827, asset->var_8e0b0827);
				w.Write(0x9111ccc0, asset->var_9111ccc0);
				w.Write(0x95d8fabf, asset->var_95d8fabf);
				w.Write(0x98333ae, asset->var_98333ae);
				w.Write(0x9aa1ef19, asset->var_9aa1ef19);
				w.Write(0x9d776ba6, asset->var_9d776ba6);
				w.Write(0x9fffdcee, asset->var_9fffdcee);
				w.Write(0xa2d7b97c, asset->var_a2d7b97c);
				w.Write(0xa8bd8bb2, asset->var_a8bd8bb2);
				w.Write(0xab300840, asset->var_ab300840);
				w.Write(0xabb570e0, asset->var_abb570e0);
				w.Write(0xac36c1db, asset->var_ac36c1db);
				w.Write(0xb8a85edd, asset->var_b8a85edd);
				w.Write(0xb9951041, asset->var_b9951041);
				w.Write(0xba335ef, asset->var_ba335ef);
				w.Write(0xbec5136b, asset->var_bec5136b);
				w.Write(0xc15c6b39, asset->var_c15c6b39);
				w.Write(0xc264efc6, asset->var_c264efc6);
				w.Write(0xc4aae0fa, asset->var_c4aae0fa);
				w.Write(0xc4d4d2a9, asset->var_c4d4d2a9);
				w.Write(0xc94f007c, asset->var_c94f007c);
				w.Write(0xca947940, asset->var_ca947940);
				w.Write(0xcb3d0f65, asset->var_cb3d0f65);
				w.Write(0xccebc40, asset->var_ccebc40);
				w.Write(0xcd539cb2, asset->var_cd539cb2);
				w.Write(0xcddb5cd0, asset->var_cddb5cd0);
				w.Write(0xce34bb7e, asset->var_ce34bb7e);
				w.Write(0xd69ee9ed, asset->var_d69ee9ed);
				w.Write(0xd911d477, asset->var_d911d477);
				w.Write(0xdbbd4cec, asset->var_dbbd4cec);
				w.Write(0xddaa57f2, asset->var_ddaa57f2);
				w.Write(0xdeb0b2fe, asset->var_deb0b2fe);
				w.Write(0xdf0f9ce9, asset->var_df0f9ce9);
				w.Write(0xdf381b5d, asset->var_df381b5d);
				w.Write(0xe0d42861, asset->var_e0d42861);
				w.Write(0xe1811962, asset->var_e1811962);
				w.Write(0xe2b40cd5, asset->var_e2b40cd5);
				w.Write(0xe4109b63, asset->var_e4109b63);
				w.Write(0xe4d4fa7e, asset->var_e4d4fa7e);
				w.Write(0xe5db3b95, asset->var_e5db3b95);
				w.Write(0xec2cbce2, asset->var_ec2cbce2);
				w.Write(0xf076a292, asset->var_f076a292);
				w.Write(0xf10d73e1, asset->var_f10d73e1);
				w.Write(0xf23e9d19, asset->var_f23e9d19);
				w.Write(0xf56ac2bd, asset->var_f56ac2bd);
				w.Write(0xf6dea63a, asset->var_f6dea63a);
				w.Write(0xf7e67f28, asset->var_f7e67f28);
				w.Write(0xf9eec1ec, asset->var_f9eec1ec);
				w.Write(0xfab9617b, asset->var_fab9617b);
				w.Write(0xff0b00ba, asset->var_ff0b00ba);
				w.Write("vehicleprojectiledamagescalar", asset->vehicleprojectiledamagescalar);
				w.Write("vehicleprojectilesplashdamagescalar", asset->vehicleprojectilesplashdamagescalar);
				w.Write("weapClass", WeapClassName(asset->weapClass));
				w.Write("weapType", WeapTypeName(asset->weapType));
				w.WriteUnk("unk0", asset->unk0);
				w.WriteUnk("unk8", asset->unk8);
				w.WriteUnk("unk10", asset->unk10);
				w.WriteUnk("unk18", asset->unk18);
				w.WriteUnk("unk50", asset->unk50);
				w.WriteUnk("unk60", asset->unk60);
				w.WriteUnk("unk70", asset->unk70);
				w.WriteUnk("unk80", asset->unk80);
				w.WriteUnk("unk88", asset->unk88);
				w.WriteUnk("unk90", asset->unk90);
				w.WriteUnk("unk98", asset->unk98);
				w.WriteUnk("unka0", asset->unka0);
				w.WriteUnk("unka8", asset->unka8);
				w.WriteUnk("unkb0", asset->unkb0);
				w.WriteUnk("unkb8", asset->unkb8);
				w.WriteUnk("unkc0", asset->unkc0);
				w.WriteUnk("unkc8", asset->unkc8);
				w.WriteUnk("unkd0", asset->unkd0);
				w.WriteUnk("unkd8", asset->unkd8);
				w.WriteUnk("unke0", asset->unke0);
				w.WriteUnk("unke8", asset->unke8);
				w.WriteUnk("unkf0", asset->unkf0);
				w.WriteUnk("unkf8", asset->unkf8);
				w.WriteUnk("unk100", asset->unk100);
				w.WriteUnk("unk108", asset->unk108);
				w.WriteUnk("unk110", asset->unk110);
				w.WriteUnk("unk118", asset->unk118);
				w.WriteUnk("unk120", asset->unk120);
				w.WriteUnk("unk128", asset->unk128);
				w.WriteUnk("unk130", asset->unk130);
				w.WriteUnk("unk138", asset->unk138);
				w.WriteUnk("unk140", asset->unk140);
				w.WriteUnk("unk148", asset->unk148);
				w.WriteUnk("unk150", asset->unk150);
				w.WriteUnk("unk158", asset->unk158);
				w.WriteUnk("unk160", asset->unk160);
				w.WriteUnk("unk168", asset->unk168);
				w.WriteUnk("unk170", asset->unk170);
				w.WriteUnk("unk178", asset->unk178);
				w.WriteUnk("unk180", asset->unk180);
				w.WriteUnk("unk188", asset->unk188);
				w.WriteUnk("unk190", asset->unk190);
				w.WriteUnk("unk198", asset->unk198);
				w.WriteUnk("unk1a0", asset->unk1a0);
				w.WriteUnk("unk1a8", asset->unk1a8);
				w.WriteUnk("unk1b0", asset->unk1b0);
				w.WriteUnk("unk1b8", asset->unk1b8);
				w.WriteUnk("unk1c0", asset->unk1c0);
				w.WriteUnk("unk1c8", asset->unk1c8);
				w.WriteUnk("unk1d0", asset->unk1d0);
				w.WriteUnk("unk1d8", asset->unk1d8);
				w.WriteUnk("unk1e0", asset->unk1e0);
				w.WriteUnk("unk1e8", asset->unk1e8);
				w.WriteUnk("unk1f0", asset->unk1f0);
				w.WriteUnk("unk1f8", asset->unk1f8);
				w.WriteUnk("unk1fc", asset->unk1fc);
				w.WriteUnk("unk200", asset->unk200);
				w.WriteUnk("unk204", asset->unk204);
				w.WriteUnk("unk20c", asset->unk20c);
				w.WriteUnk("unk210", asset->unk210);
				w.WriteUnk("unk218", asset->unk218);
				w.WriteUnk("unk220", asset->unk220);
				w.WriteUnk("unk224", asset->unk224);
				w.WriteUnk("unk228", asset->unk228);
				w.WriteUnk("unk234", asset->unk234);
				w.WriteUnk("unk238", asset->unk238);
				w.WriteUnk("unk240", asset->unk240);
				w.WriteUnk("unk24c", asset->unk24c);
				w.WriteUnk("unk250", asset->unk250);
				w.WriteUnk("unk258", asset->unk258);
				w.WriteUnk("unk260", asset->unk260);
				w.WriteUnk("unk268", asset->unk268);
				w.WriteUnk("unk270", asset->unk270);
				w.WriteUnk("unk278", asset->unk278);
				w.WriteUnk("unk280", asset->unk280);
				w.WriteUnk("unk288", asset->unk288);
				w.WriteUnk("unk290", asset->unk290);
				w.WriteUnk("unk298", asset->unk298);
				w.WriteUnk("unk2a0", asset->unk2a0);
				w.WriteUnk("unk2a8", asset->unk2a8);
				w.WriteUnk("unk2c0", asset->unk2c0);
				w.WriteUnk("unk2d0", asset->unk2d0);
				w.WriteUnk("unk2d8", asset->unk2d8);
				w.WriteUnk("unk2e0", asset->unk2e0);
				w.WriteUnk("unk2f8", asset->unk2f8);
				w.WriteUnk("unk310", asset->unk310);
				w.WriteUnk("unk32a", asset->unk32a);
				w.WriteUnk("unk358", asset->unk358);
				w.WriteUnk("unk3b0", asset->unk3b0);
				w.WriteUnk("unk3c8", asset->unk3c8);
				w.WriteUnk("unk3d0", asset->unk3d0);
				w.WriteUnk("unk3d8", asset->unk3d8);
				w.WriteUnk("unk3dc", asset->unk3dc);
				w.WriteUnk("unk3e0", asset->unk3e0);
				w.WriteUnk("unk3ea", asset->unk3ea);
				w.WriteUnk("unk3ec", asset->unk3ec);
				w.WriteUnk("unk3f4", asset->unk3f4);
				w.WriteUnk("unk3fa", asset->unk3fa);
				w.WriteUnk("unk406", asset->unk406);
				w.WriteUnk("unk40c", asset->unk40c);
				w.WriteUnk("unk418", asset->unk418);
				w.WriteUnk("unk420", asset->unk420);
				w.WriteUnk("unk428", asset->unk428);
				w.WriteUnk("unk430", asset->unk430);
				w.WriteUnk("unk438", asset->unk438);
				w.WriteUnk("unk440", asset->unk440);
				w.WriteUnk("unk448", asset->unk448);
				w.WriteUnk("unk450", asset->unk450);
				w.WriteUnk("unk458", asset->unk458);
				w.WriteUnk("unk460", asset->unk460);
				w.WriteUnk("unk468", asset->unk468);
				w.WriteUnk("unk470", asset->unk470);
				w.WriteUnk("unk478", asset->unk478);
				w.WriteUnk("unk480", asset->unk480);
				w.WriteUnk("unk488", asset->unk488);
				w.WriteUnk("unk490", asset->unk490);
				w.WriteUnk("unk498", asset->unk498);
				w.WriteUnk("unk4a0", asset->unk4a0);
				w.WriteUnk("unk4a8", asset->unk4a8);
				w.WriteUnk("unk4c0", asset->unk4c0);
				w.WriteUnk("unk4c8", asset->unk4c8);
				w.WriteUnk("unk4d0", asset->unk4d0);
				w.WriteUnk("unk4d8", asset->unk4d8);
				w.WriteUnk("unk4e0", asset->unk4e0);
				w.WriteUnk("unk4e8", asset->unk4e8);
				w.WriteUnk("unk4f0", asset->unk4f0);
				w.WriteUnk("unk4f8", asset->unk4f8);
				w.WriteUnk("unk500", asset->unk500);
				w.WriteUnk("unk508", asset->unk508);
				w.WriteUnk("unk510", asset->unk510);
				w.WriteUnk("unk518", asset->unk518);
				w.WriteUnk("unk520", asset->unk520);
				w.WriteUnk("unk528", asset->unk528);
				w.WriteUnk("unk530", asset->unk530);
				w.WriteUnk("unk538", asset->unk538);
				w.WriteUnk("unk540", asset->unk540);
				w.WriteUnk("unk548", asset->unk548);
				w.WriteUnk("unk550", asset->unk550);
				w.WriteUnk("unk558", asset->unk558);
				w.WriteUnk("unk560", asset->unk560);
				w.WriteUnk("unk568", asset->unk568);
				w.WriteUnk("unk56c", asset->unk56c);
				w.WriteUnk("unk588", asset->unk588);
				w.WriteUnk("unk5a0", asset->unk5a0);
				w.WriteUnk("unk5a4", asset->unk5a4);
				w.WriteUnk("unk5a8", asset->unk5a8);
				w.WriteUnk("unk5b8", asset->unk5b8);
				w.WriteUnk("unk5c8", asset->unk5c8);
				w.WriteUnk("unk5d0", asset->unk5d0);
				w.WriteUnk("unk5d8", asset->unk5d8);
				w.WriteUnk("unk5e0", asset->unk5e0);
				w.WriteUnk("unk5e8", asset->unk5e8);
				w.WriteUnk("unk5f0", asset->unk5f0);
				w.WriteUnk("unk5f8", asset->unk5f8);
				w.WriteUnk("unk600", asset->unk600);
				w.WriteUnk("unk608", asset->unk608);
				w.WriteUnk("unk610", asset->unk610);
				w.WriteUnk("unk620", asset->unk620);
				w.WriteUnk("unk628", asset->unk628);
				w.WriteUnk("unk630", asset->unk630);
				w.WriteUnk("unk638", asset->unk638);
				w.WriteUnk("unk640", asset->unk640);
				w.WriteUnk("unk648", asset->unk648);
				w.WriteUnk("unk658", asset->unk658);
				w.WriteUnk("unk660", asset->unk660);
				w.WriteUnk("unk668", asset->unk668);
				w.WriteUnk("unk670", asset->unk670);
				w.WriteUnk("unk678", asset->unk678);
				w.WriteUnk("unk680", asset->unk680);
				w.WriteUnk("unk688", asset->unk688);
				w.WriteUnk("unk690", asset->unk690);
				w.WriteUnk("unk6a0", asset->unk6a0);
				w.WriteUnk("unk6a8", asset->unk6a8);
				w.WriteUnk("unk6c0", asset->unk6c0);
				w.WriteUnk("unk6c8", asset->unk6c8);
				w.WriteUnk("unk6d0", asset->unk6d0);
				w.WriteUnk("unk6d8", asset->unk6d8);
				w.WriteUnk("unk6e0", asset->unk6e0);
				w.WriteUnk("unk6e8", asset->unk6e8);
				w.WriteUnk("unk6f0", asset->unk6f0);
				w.WriteUnk("unk6f8", asset->unk6f8);
				w.WriteUnk("unk700", asset->unk700);
				w.WriteUnk("unk708", asset->unk708);
				w.WriteUnk("unk710", asset->unk710);
				w.WriteUnk("unk718", asset->unk718);
				w.WriteUnk("unk720", asset->unk720);
				w.WriteUnk("unk728", asset->unk728);
				w.WriteUnk("unk730", asset->unk730);
				w.WriteUnk("unk740", asset->unk740);
				w.WriteUnk("unk748", asset->unk748);
				w.WriteUnk("unk750", asset->unk750);
				w.WriteUnk("unk758", asset->unk758);
				w.WriteUnk("unk760", asset->unk760);
				w.WriteUnk("unk768", asset->unk768);
				w.WriteUnk("unk770", asset->unk770);
				w.WriteUnk("unk778", asset->unk778);
				w.WriteUnk("unk780", asset->unk780);
				w.WriteUnk("unk788", asset->unk788);
				w.WriteUnk("unk790", asset->unk790);
				w.WriteUnk("unk798", asset->unk798);
				w.WriteUnk("unk7a0", asset->unk7a0);
				w.WriteUnk("unk7a8", asset->unk7a8);
				w.WriteUnk("unk7b0", asset->unk7b0);
				w.WriteUnk("unk7b8", asset->unk7b8);
				w.WriteUnk("unk7c0", asset->unk7c0);
				w.WriteUnk("unk7c8", asset->unk7c8);
				w.WriteUnk("unk7d0", asset->unk7d0);
				w.WriteUnk("unk7d8", asset->unk7d8);
				w.WriteUnk("unk7e0", asset->unk7e0);
				w.WriteUnk("unk7e8", asset->unk7e8);
				w.WriteUnk("unk7f0", asset->unk7f0);
				w.WriteUnk("unk7f8", asset->unk7f8);
				w.WriteUnk("unk800", asset->unk800);
				w.WriteUnk("unk808", asset->unk808);
				w.WriteUnk("unk810", asset->unk810);
				w.WriteUnk("unk818", asset->unk818);
				w.WriteUnk("unk820", asset->unk820);
				w.WriteUnk("unk828", asset->unk828);
				w.WriteUnk("unk830", asset->unk830);
				w.WriteUnk("unk838", asset->unk838);
				w.WriteUnk("unk848", asset->unk848);
				w.WriteUnk("unk850", asset->unk850);
				w.WriteUnk("unk860", asset->unk860);
				w.WriteUnk("unk870", asset->unk870);
				w.WriteUnk("unk878", asset->unk878);
				w.WriteUnk("unk880", asset->unk880);
				w.WriteUnk("unk888", asset->unk888);
				w.WriteUnk("unk890", asset->unk890);
				w.WriteUnk("unk898", asset->unk898);
				w.WriteUnk("unk8a0", asset->unk8a0);
				w.WriteUnk("unk8a8", asset->unk8a8);
				w.WriteUnk("unk8b0", asset->unk8b0);
				w.WriteUnk("unk8b8", asset->unk8b8);
				w.WriteUnk("unk8c8", asset->unk8c8);
				w.WriteUnk("unk8d0", asset->unk8d0);
				w.WriteUnk("unk8d8", asset->unk8d8);
				w.WriteUnk("unk8e0", asset->unk8e0);
				w.WriteUnk("unk8e8", asset->unk8e8);
				w.WriteUnk("unk8f0", asset->unk8f0);
				w.WriteUnk("unk8f8", asset->unk8f8);
				w.WriteUnk("unk908", asset->unk908);
				w.WriteUnk("unk910", asset->unk910);
				w.WriteUnk("unk918", asset->unk918);
				w.WriteUnk("unk920", asset->unk920);
				w.WriteUnk("unk928", asset->unk928);
				w.WriteUnk("unk930", asset->unk930);
				w.WriteUnk("unk938", asset->unk938);
				w.WriteUnk("unk940", asset->unk940);
				w.WriteUnk("unk948", asset->unk948);
				w.WriteUnk("unk958", asset->unk958);
				w.WriteUnk("unk960", asset->unk960);
				w.WriteUnk("unk968", asset->unk968);
				w.WriteUnk("unk970", asset->unk970);
				w.WriteUnk("unk9a0", asset->unk9a0);
				w.WriteUnk("unk9a8", asset->unk9a8);
				w.WriteUnk("unk9b0", asset->unk9b0);
				w.WriteUnk("unk9c0", asset->unk9c0);
				w.WriteUnk("unk9c8", asset->unk9c8);
				w.WriteUnk("unk9d0", asset->unk9d0);
				w.WriteUnk("unk9d8", asset->unk9d8);
				w.WriteUnk("unk9e0", asset->unk9e0);
				w.WriteUnk("unk9e8", asset->unk9e8);
				w.WriteUnk("unk9f0", asset->unk9f0);
				w.WriteUnk("unka00", asset->unka00);
				w.WriteUnk("unka08", asset->unka08);
				w.WriteUnk("unka10", asset->unka10);
				w.WriteUnk("unka18", asset->unka18);
				w.WriteUnk("unka20", asset->unka20);
				w.WriteUnk("unka28", asset->unka28);
				w.WriteUnk("unka30", asset->unka30);
				w.WriteUnk("unka38", asset->unka38);
				w.WriteUnk("unka40", asset->unka40);
				w.WriteUnk("unka48", asset->unka48);
				w.WriteUnk("unka50", asset->unka50);
				w.WriteUnk("unka58", asset->unka58);
				w.WriteUnk("unka60", asset->unka60);
				w.WriteUnk("unka68", asset->unka68);
				w.WriteUnk("unka70", asset->unka70);
				w.WriteUnk("unka78", asset->unka78);
				w.WriteUnk("unka80", asset->unka80);
				w.WriteUnk("unka90", asset->unka90);
				w.WriteUnk("unka98", asset->unka98);
				w.WriteUnk("unkaa0", asset->unkaa0);
				w.WriteUnk("unkaa8", asset->unkaa8);
				w.WriteUnk("unkab0", asset->unkab0);
				w.WriteUnk("unkab8", asset->unkab8);
				w.WriteUnk("unkac0", asset->unkac0);
				w.WriteUnk("unkac8", asset->unkac8);
				w.WriteUnk("unkae0", asset->unkae0);
				w.WriteUnk("unkaf8", asset->unkaf8);
				w.WriteUnk("unkb00", asset->unkb00);
				w.WriteUnk("unkb08", asset->unkb08);
				w.WriteUnk("unkb10", asset->unkb10);
				w.WriteUnk("unkb20", asset->unkb20);
				w.WriteUnk("unkb28", asset->unkb28);
				w.WriteUnk("unkb30", asset->unkb30);
				w.WriteUnk("unkb38", asset->unkb38);
				w.WriteUnk("unkb40", asset->unkb40);
				w.WriteUnk("unkb48", asset->unkb48);
				w.WriteUnk("unkb50", asset->unkb50);
				w.WriteUnk("unkb58", asset->unkb58);
				w.WriteUnk("unkb60", asset->unkb60);
				w.WriteUnk("unkb70", asset->unkb70);
				w.WriteUnk("unkb78", asset->unkb78);
				w.WriteUnk("unkb80", asset->unkb80);
				w.WriteUnk("unkb98", asset->unkb98);
				w.WriteUnk("unkba0", asset->unkba0);
				w.WriteUnk("unkba8", asset->unkba8);
				w.WriteUnk("unkbb0", asset->unkbb0);
				w.WriteUnk("unkbb8", asset->unkbb8);
				w.WriteUnk("unkbd0", asset->unkbd0);
				w.WriteUnk("unkbd8", asset->unkbd8);
				w.WriteUnk("unkbe0", asset->unkbe0);
				w.WriteUnk("unkbe8", asset->unkbe8);
				w.WriteUnk("unkbf0", asset->unkbf0);
				w.WriteUnk("unkbf8", asset->unkbf8);
				w.WriteUnk("unkc00", asset->unkc00);
				w.WriteUnk("unkc28", asset->unkc28);
				w.WriteUnk("unkc30", asset->unkc30);
				w.WriteUnk("unkc38", asset->unkc38);
				w.WriteUnk("unkc40", asset->unkc40);
				w.WriteUnk("unkc48", asset->unkc48);
				w.WriteUnk("unkc50", asset->unkc50);
				w.WriteUnk("unkc58", asset->unkc58);
				w.WriteUnk("unkc60", asset->unkc60);
				w.WriteUnk("unkc68", asset->unkc68);
				w.WriteUnk("unkc70", asset->unkc70);
				w.WriteUnk("unkc90", asset->unkc90);
				w.WriteUnk("unkc98", asset->unkc98);
				w.WriteUnk("unkca0", asset->unkca0);
				w.WriteUnk("unkca8", asset->unkca8);
				w.WriteUnk("unkcb8", asset->unkcb8);
				w.WriteUnk("unkcd0", asset->unkcd0);
				w.WriteUnk("unkcd8", asset->unkcd8);
				w.WriteUnk("unkce0", asset->unkce0);
				w.WriteUnk("unkce8", asset->unkce8);
				w.WriteUnk("unkcf0", asset->unkcf0);
				w.WriteUnk("unkcf8", asset->unkcf8);
				w.WriteUnk("unkd00", asset->unkd00);
				w.WriteUnk("unkd08", asset->unkd08);
				w.WriteUnk("unkd10", asset->unkd10);
				w.WriteUnk("unkd18", asset->unkd18);
				w.WriteUnk("unkd20", asset->unkd20);
				w.WriteUnk("unkd30", asset->unkd30);
				w.WriteUnk("unkd38", asset->unkd38);
				w.WriteUnk("unkd40", asset->unkd40);
				w.WriteUnk("unkd48", asset->unkd48);
				w.WriteUnk("unkd58", asset->unkd58);
				w.WriteUnk("unkd60", asset->unkd60);
				w.WriteUnk("unkd64", asset->unkd64);
				w.WriteUnk("unkd68", asset->unkd68);
				w.WriteUnk("unkd78", asset->unkd78);
				w.WriteUnk("unkd80", asset->unkd80);
				w.WriteUnk("unkd88", asset->unkd88);
				w.WriteUnk("unkd90", asset->unkd90);
				w.WriteUnk("unkd98", asset->unkd98);
				w.WriteUnk("unkda0", asset->unkda0);
				w.WriteUnk("unkda8", asset->unkda8);
				w.WriteUnk("unkdb0", asset->unkdb0);
				w.WriteUnk("unkdb8", asset->unkdb8);
				w.WriteUnk("unkdc0", asset->unkdc0);
				w.WriteUnk("unkdc8", asset->unkdc8);
				w.WriteUnk("unkdd0", asset->unkdd0);
				w.WriteUnk("unkdd8", asset->unkdd8);
				w.WriteUnk("unkde0", asset->unkde0);
				w.WriteUnk("unkde8", asset->unkde8);
				w.WriteUnk("unkdf0", asset->unkdf0);
				w.WriteUnk("unkdf8", asset->unkdf8);
				w.WriteUnk("unke00", asset->unke00);
				w.WriteUnk("unke08", asset->unke08);
				w.WriteUnk("unke10", asset->unke10);
				w.WriteUnk("unke18", asset->unke18);
				w.WriteUnk("unke20", asset->unke20);
				w.WriteUnk("unke28", asset->unke28);
				w.WriteUnk("unke30", asset->unke30);
				w.WriteUnk("unke38", asset->unke38);
				w.WriteUnk("unke58", asset->unke58);
				w.WriteUnk("unke78", asset->unke78);
				w.WriteUnk("unke80", asset->unke80);
				w.WriteUnk("unke88", asset->unke88);
				w.WriteUnk("unkea0", asset->unkea0);
				w.WriteUnk("unkea8", asset->unkea8);
				w.WriteUnk("unkeb0", asset->unkeb0);
				w.WriteUnk("unkeb8", asset->unkeb8);
				w.WriteUnk("unkec0", asset->unkec0);
				w.WriteUnk("unkec8", asset->unkec8);
				w.WriteUnk("unked0", asset->unked0);
				w.WriteUnk("unkee0", asset->unkee0);
				w.WriteUnk("unkee8", asset->unkee8);
				w.WriteUnk("unkef0", asset->unkef0);
				w.WriteUnk("unkef8", asset->unkef8);
				w.WriteUnk("unkf00", asset->unkf00);
				w.WriteUnk("unkf08", asset->unkf08);
				w.WriteUnk("unkf10", asset->unkf10);
				w.WriteUnk("unkf20", asset->unkf20);
				w.WriteUnk("unkf30", asset->unkf30);
				w.WriteUnk("unkf38", asset->unkf38);
				w.WriteUnk("unkf40", asset->unkf40);
				w.WriteUnk("unkf68", asset->unkf68);
				w.WriteUnk("unkf70", asset->unkf70);
				w.WriteUnk("unkf78", asset->unkf78);
				w.WriteUnk("unkf80", asset->unkf80);
				w.WriteUnk("unkf88", asset->unkf88);
				w.WriteUnk("unkf98", asset->unkf98);
				w.WriteUnk("unkfa0", asset->unkfa0);
				w.WriteUnk("unkfa8", asset->unkfa8);
				w.WriteUnk("unkfb0", asset->unkfb0);
				w.WriteUnk("unkfb8", asset->unkfb8);
				w.WriteUnk("unkfc8", asset->unkfc8);
				w.WriteUnk("unkfd0", asset->unkfd0);
				w.WriteUnk("unkfd8", asset->unkfd8);
				w.WriteUnk("unkfe0", asset->unkfe0);
				w.WriteUnk("unkfe8", asset->unkfe8);
				w.WriteUnk("unkff0", asset->unkff0);
				w.WriteUnk("unkff8", asset->unkff8);
				w.WriteUnk("unk1000", asset->unk1000);
				w.WriteUnk("unk1018", asset->unk1018);
				w.WriteUnk("unk1020", asset->unk1020);
				w.WriteUnk("unk1028", asset->unk1028);
				w.WriteUnk("unk1030", asset->unk1030);
				w.WriteUnk("unk1038", asset->unk1038);
				w.WriteUnk("unk1040", asset->unk1040);
				w.WriteUnk("unk1048", asset->unk1048);
				w.WriteUnk("unk1050", asset->unk1050);
				w.WriteUnk("unk1058", asset->unk1058);
				w.WriteUnk("unk1060", asset->unk1060);
				w.WriteUnk("unk1068", asset->unk1068);
				w.WriteUnk("unk1070", asset->unk1070);
				w.WriteUnk("unk1078", asset->unk1078);
				w.WriteUnk("unk1080", asset->unk1080);
				w.WriteUnk("unk1088", asset->unk1088);
				w.WriteUnk("unk1090", asset->unk1090);
				w.WriteUnk("unk1098", asset->unk1098);
				w.WriteUnk("unk10a0", asset->unk10a0);
				w.WriteUnk("unk10a8", asset->unk10a8);
				w.WriteUnk("unk10b0", asset->unk10b0);
				w.WriteUnk("unk10b8", asset->unk10b8);
				w.WriteUnk("unk10b9", asset->unk10b9);
				w.WriteUnk("unk10ba", asset->unk10ba);
				w.WriteUnk("unk10bb", asset->unk10bb);
				w.WriteUnk("unk10bc", asset->unk10bc);
				w.WriteUnk("unk10bd", asset->unk10bd);
				w.WriteUnk("unk10be", asset->unk10be);
				w.WriteUnk("unk10c4", asset->unk10c4);
				w.WriteUnk("unk10c8", asset->unk10c8);
				w.WriteUnk("unk10cc", asset->unk10cc);
				w.WriteUnk("unk10d0", asset->unk10d0);
				w.WriteUnk("unk10d4", asset->unk10d4);
				w.WriteUnk("unk10d7", asset->unk10d7);
				w.WriteUnk("unk10d8", asset->unk10d8);
				w.WriteUnk("unk10de", asset->unk10de);
				w.WriteUnk("unk10f0", asset->unk10f0);
				w.WriteUnk("unk10f2", asset->unk10f2);
				w.WriteUnk("unk10fc", asset->unk10fc);
				w.WriteUnk("unk10ff", asset->unk10ff);
				w.WriteUnk("unk1100", asset->unk1100);
				w.WriteUnk("unk1102", asset->unk1102);
				w.WriteUnk("unk1106", asset->unk1106);
				w.WriteUnk("unk110c", asset->unk110c);
				w.WriteUnk("unk111c", asset->unk111c);
				w.WriteUnk("unk1124", asset->unk1124);
				w.WriteUnk("unk1128", asset->unk1128);
				w.WriteUnk("unk112c", asset->unk112c);
				w.WriteUnk("unk1136", asset->unk1136);
				w.WriteUnk("unk1138", asset->unk1138);
				w.WriteUnk("unk1140", asset->unk1140);
				w.WriteUnk("unk1150", asset->unk1150);
				w.WriteUnk("unk1158", asset->unk1158);
				w.WriteUnk("unk1160", asset->unk1160);
				w.WriteUnk("unk1164", asset->unk1164);
				w.WriteUnk("unk1168", asset->unk1168);
				w.WriteUnk("unk116c", asset->unk116c);
				w.WriteUnk("unk116e", asset->unk116e);
				w.WriteUnk("unk117a", asset->unk117a);
				w.WriteUnk("unk117c", asset->unk117c);
				w.WriteUnk("unk117e", asset->unk117e);
				w.WriteUnk("unk1188", asset->unk1188);
				w.WriteUnk("unk118c", asset->unk118c);
				w.WriteUnk("unk119a", asset->unk119a);
				w.WriteUnk("unk119c", asset->unk119c);
				w.WriteUnk("unk119e", asset->unk119e);
				w.WriteUnk("unk11a2", asset->unk11a2);
				w.WriteUnk("unk11a4", asset->unk11a4);
				w.WriteUnk("unk11a6", asset->unk11a6);
				w.WriteUnk("unk11b8", asset->unk11b8);
				w.WriteUnk("unk11c0", asset->unk11c0);
				w.WriteUnk("unk11c6", asset->unk11c6);
				w.WriteUnk("unk11c8", asset->unk11c8);
				w.WriteUnk("unk11d0", asset->unk11d0);
				w.WriteUnk("unk11d4", asset->unk11d4);
				w.WriteUnk("unk11d8", asset->unk11d8);
				w.WriteUnk("unk11e0", asset->unk11e0);
				w.WriteUnk("unk11e2", asset->unk11e2);
				w.WriteUnk("unk11e6", asset->unk11e6);
				w.WriteUnk("unk11e8", asset->unk11e8);
				w.WriteUnk("unk11f0", asset->unk11f0);
				w.WriteUnk("unk11f4", asset->unk11f4);
				w.WriteUnk("unk11f8", asset->unk11f8);
				w.WriteUnk("unk1200", asset->unk1200);
				w.WriteUnk("unk1208", asset->unk1208);
			}
			json.EndObject();

			if (!json.WriteToFile(outFile)) {
				LOG_ERROR("Error when dumping {}", outFile.string());
			}
		}
	};

	utils::MapAdder<ImplWorker, games::bo4::pool::XAssetType, Worker> impl{ GetWorkers(), games::bo4::pool::XAssetType::ASSET_TYPE_WEAPON_TUNABLES };
}